package com.sophicreeper.backmath.data.models;

import com.sophicreeper.backmath.BackMath;
import net.minecraft.data.DataGenerator;
import net.minecraftforge.client.model.generators.ItemModelBuilder;
import net.minecraftforge.client.model.generators.ItemModelProvider;
import net.minecraftforge.client.model.generators.ModelFile;
import net.minecraftforge.common.data.ExistingFileHelper;

import javax.annotation.Nonnull;

public class BMItemModelProvider extends ItemModelProvider {
    public final ModelFile handheld = getExistingFile(mcLoc("item/handheld"));
    public final ModelFile generated = getExistingFile(mcLoc("item/generated"));

    public BMItemModelProvider(DataGenerator generator, ExistingFileHelper fileHelper) {
        super(generator, BackMath.MOD_ID, fileHelper);
    }

    @Nonnull
    @Override
    public String getName() {
        return "Back Math - Item Models";
    }

    @Override
    protected void registerModels() {
        withExistingParent("devil_stairs", modLoc("block/devil_stairs"));
        withExistingParent("nether_devil_ore", modLoc("block/nether_devil_ore"));
        withExistingParent("devil_trapdoor", modLoc("block/devil_trapdoor_bottom"));
        withExistingParent("devil_fence", modLoc("block/devil_fence_inventory"));
        withExistingParent("devil_wall", modLoc("block/devil_wall_inventory"));
        withExistingParent("devil_fence_gate", modLoc("block/devil_fence_gate"));
        withExistingParent("devil_slab", modLoc("block/devil_slab"));
        withExistingParent("devil_ore", modLoc("block/devil_ore"));
        withExistingParent("chiseled_devil_block", modLoc("block/chiseled_devil_block"));
        withExistingParent("sophie_chiseled_devil_block", modLoc("block/sophie_chiseled_devil_block"));
        withExistingParent("angelic_trapdoor", modLoc("block/angelic_trapdoor_bottom"));
        withExistingParent("guarana_oak_leaves", modLoc("block/guarana_oak_leaves"));
        withExistingParent("mango_oak_leaves", modLoc("block/mango_oak_leaves"));
        withExistingParent("mid_term_ore", modLoc("block/mid_term_ore"));
        withExistingParent("mid_term_block", modLoc("block/mid_term_block"));
        withExistingParent("devil_carpet", modLoc("block/devil_carpet"));
        withExistingParent("raw_devil_block", modLoc("block/raw_devil_block"));
        withExistingParent("devil_concrete", modLoc("block/devil_concrete"));
        withExistingParent("devil_concrete_powder", modLoc("block/devil_concrete_powder"));
        withExistingParent("devil_terracotta", modLoc("block/devil_terracotta"));
        withExistingParent("devil_glazed_terracotta", modLoc("block/devil_glazed_terracotta"));
        withExistingParent("angelic_block", modLoc("block/angelic_block"));
        withExistingParent("angelic_ore", modLoc("block/angelic_ore"));
        withExistingParent("devil_wool", modLoc("block/devil_wool"));
        withExistingParent("devil_stained_glass", modLoc("block/devil_stained_glass"));
        withExistingParent("christian_mid_term_block", modLoc("block/christian_mid_term_block"));
        withExistingParent("crystallizer", modLoc("block/crystallizer_empty_mold"));
        withExistingParent("crystalline_crystallizer", modLoc("block/crystalline_crystallizer_empty_mold"));
        withExistingParent("angelic_button", modLoc("block/angelic_button_inventory"));
        withExistingParent("devil_brick_wall", modLoc("block/devil_brick_wall_inventory"));
        withExistingParent("angelical_casing");
        withExistingParent("meal_cooker");
        withExistingParent("christian_mid_term_angelic_alloy_block");
        withExistingParent("christian_mid_term_devil_alloy_block");
        withExistingParent("devil_angelic_alloy_block");
        withExistingParent("grape_vine_leaves");
        withExistingParent("raw_angelic_block");
        withExistingParent("raw_mid_term_block");
        withExistingParent("deepslate_devil_ore");
        withExistingParent("deepslate_angelic_ore");
        withExistingParent("obsidian_mid_term_ore");
        withExistingParent("aljame_birch_leaves");
        withExistingParent("lemon_oak_leaves");
        withExistingParent("crystalline_angelic_ore");
        withExistingParent("alice_toy");
        withExistingParent("alan_toy");
        withExistingParent("innovator_toy");
        withExistingParent("devil_bricks");
        withExistingParent("devil_brick_stairs");
        withExistingParent("devil_brick_slab");
        withExistingParent("pineapple_oak_leaves");
        withExistingParent("obsidian_infused_mid_term_block");
        withExistingParent("crystalline_birch_log");
        withExistingParent("crystalline_birch_wood");
        withExistingParent("crystalline_birch_planks");
        withExistingParent("crystalline_birch_leaves");
        withExistingParent("crystalline_birch_trapdoor", modLoc("block/crystalline_birch_trapdoor_bottom"));
        withExistingParent("angelic_bricks");
        withExistingParent("cracked_angelic_bricks");
        withExistingParent("angelic_brick_slab");
        withExistingParent("angelic_brick_stairs");
        withExistingParent("angelic_brick_wall", modLoc("block/angelic_brick_wall_inventory"));
        withExistingParent("crystalline_birch_pressure_plate");
        withExistingParent("crystalline_birch_button", modLoc("block/crystalline_birch_button_inventory"));
        withExistingParent("crystalline_birch_fence", modLoc("block/crystalline_birch_fence_inventory"));
        withExistingParent("crystalline_birch_stairs");
        withExistingParent("crystalline_birch_slab");
        withExistingParent("crystalline_birch_fence_gate");
        withExistingParent("aljanstone");
        withExistingParent("aljameed_ore");
        withExistingParent("aljameed_block");
        withExistingParent("raw_aljameed_block");
        withExistingParent("moonering_ore");
        withExistingParent("moonering_block");
        withExistingParent("raw_mooner_block");
        withExistingParent("aljancap_planks");
        withExistingParent("aljanstone_stairs");
        withExistingParent("aljanstone_slab");
        withExistingParent("aljanstone_bricks");
        withExistingParent("aljanstone_brick_stairs");
        withExistingParent("aljanstone_brick_slab");
        withExistingParent("aljanstone_brick_wall", modLoc("block/aljanstone_brick_wall_inventory"));
        withExistingParent("smooth_aljanstone");
        withExistingParent("smooth_aljanstone_slab");
        withExistingParent("cobbled_aljanstone");
        withExistingParent("cobbled_aljanstone_stairs");
        withExistingParent("cobbled_aljanstone_slab");
        withExistingParent("cobbled_aljanstone_wall", modLoc("block/cobbled_aljanstone_wall_inventory"));
        withExistingParent("aljanwood_log");
        withExistingParent("aljanwood_wood");
        withExistingParent("stripped_aljanwood_log");
        withExistingParent("stripped_aljanwood_wood");
        withExistingParent("aljanwood_leaves");
        withExistingParent("aljanwood_planks");
        withExistingParent("aljanwood_stairs");
        withExistingParent("aljanwood_slab");
        withExistingParent("aljanwood_trapdoor", modLoc("block/aljanwood_trapdoor_bottom"));
        withExistingParent("aljanwood_button", modLoc("block/aljanwood_button_inventory"));
        withExistingParent("aljanwood_pressure_plate");
        withExistingParent("oak_grape_vine_post", modLoc("block/grape_vine_posts/oak"));
        withExistingParent("spruce_grape_vine_post", modLoc("block/grape_vine_posts/spruce"));
        withExistingParent("birch_grape_vine_post", modLoc("block/grape_vine_posts/birch"));
        withExistingParent("jungle_grape_vine_post", modLoc("block/grape_vine_posts/jungle"));
        withExistingParent("acacia_grape_vine_post", modLoc("block/grape_vine_posts/acacia"));
        withExistingParent("dark_oak_grape_vine_post", modLoc("block/grape_vine_posts/dark_oak"));
        withExistingParent("crimson_grape_vine_post", modLoc("block/grape_vine_posts/crimson"));
        withExistingParent("warped_grape_vine_post", modLoc("block/grape_vine_posts/warped"));
        withExistingParent("mid_term_trapdoor", modLoc("block/mid_term_trapdoor_bottom"));
        withExistingParent("obsidian_infused_mid_term_trapdoor", modLoc("block/obsidian_infused_mid_term_trapdoor_bottom"));
        withExistingParent("charjan_coal_block");
        withExistingParent("hardened_amaracamel_block");
        withExistingParent("aljanstone_wall", modLoc("block/aljanstone_wall_inventory"));
        withExistingParent("sleepingstone_wall", modLoc("block/sleepingstone_wall_inventory"));
        withExistingParent("polished_sleepingstone_wall", modLoc("block/polished_sleepingstone_wall_inventory"));
        withExistingParent("sleepingstone_brick_wall", modLoc("block/sleepingstone_brick_wall_inventory"));
        withExistingParent("sleepingstone");
        withExistingParent("polished_sleepingstone");
        withExistingParent("sleepingstone_bricks");
        withExistingParent("sleepingstone_slab");
        withExistingParent("sleepingstone_stairs");
        withExistingParent("polished_sleepingstone_slab");
        withExistingParent("polished_sleepingstone_stairs");
        withExistingParent("sleepingstone_brick_slab");
        withExistingParent("sleepingstone_brick_stairs");
        withExistingParent("aljanwood_button", modLoc("block/aljanwood_button_inventory"));
        withExistingParent("aljancap_button", modLoc("block/aljancap_button_inventory"));
        withExistingParent("aljanwood_pressure_plate");
        withExistingParent("aljancap_pressure_plate");
        withExistingParent("aljancap_stairs");
        withExistingParent("aljancap_slab");
        withExistingParent("aljanwood_fence", modLoc("block/aljanwood_fence_inventory"));
        withExistingParent("aljancap_fence", modLoc("block/aljancap_fence_inventory"));
        withExistingParent("aljanwood_fence_gate");
        withExistingParent("aljancap_fence_gate");
        withExistingParent("insomnian_log");
        withExistingParent("insomnian_wood");
        withExistingParent("insomnian_leaves");
        withExistingParent("insomnian_planks");
        withExistingParent("insomnian_stairs");
        withExistingParent("insomnian_slab");
        withExistingParent("insomnian_fence_gate");
        withExistingParent("insomnian_fence", modLoc("block/insomnian_fence_inventory"));
        withExistingParent("insomnian_button", modLoc("block/insomnian_button_inventory"));
        withExistingParent("insomnian_pressure_plate");
        withExistingParent("aljancap_button", modLoc("block/aljancap_button_inventory"));
        withExistingParent("aljancap_pressure_plate");
        withExistingParent("stripped_insomnian_log");
        withExistingParent("stripped_insomnian_wood");
        withExistingParent("aljancap_log");
        withExistingParent("aljancap_wood");
        withExistingParent("stripped_aljancap_log");
        withExistingParent("stripped_aljancap_wood");
        withExistingParent("milkllary_block");
        withExistingParent("jantic_ore");
        withExistingParent("aljancap_leaves");
        withExistingParent("aljanwood_grape_vine_post", modLoc("block/grape_vine_posts/aljanwood"));
        withExistingParent("aljancap_grape_vine_post", modLoc("block/grape_vine_posts/aljancap"));
        withExistingParent("insomnian_grape_vine_post", modLoc("block/grape_vine_posts/insomnian"));
        withExistingParent("aljamic_grass_block");
        withExistingParent("aljamic_dirt");
        withExistingParent("chiseled_aljanstone_fabricio");
        withExistingParent("chiseled_aljanstone_june");
        withExistingParent("chiseled_aljanstone_sophie");
        withExistingParent("chiseled_aljanstone_lucia");
        withExistingParent("chiseled_aljanstone_creeper");
        withExistingParent("chiseled_sleepingstone_fabricio");
        withExistingParent("chiseled_sleepingstone_june");
        withExistingParent("chiseled_sleepingstone_sophie");
        withExistingParent("chiseled_sleepingstone_lucia");
        withExistingParent("chiseled_sleepingstone_creeper");
        withExistingParent("orange_oak_leaves");
        withExistingParent("banana_jungle_leaves");
        withExistingParent("crystalline_angelic_block");
        withExistingParent("amaracap_leaves");
        withExistingParent("tyler_toy");
        withExistingParent("malena_toy");
        withExistingParent("insogravel");
        withExistingParent("aljan_portal_stand");
        withExistingParent("aljamic_farmland");
        withExistingParent("aljameed_pressure_plate");
        withExistingParent("moonering_pressure_plate");
        withExistingParent("aljameed_button", modLoc("block/aljameed_button_inventory"));
        withExistingParent("moonering_button", modLoc("block/moonering_button_inventory"));
        withExistingParent("aljamic_copper_ore");
        withExistingParent("aljamic_tin_ore");
        withExistingParent("sticky_amaracamel_block");
        withExistingParent("sleepingstone_aljameed_ore");
        withExistingParent("sleepingstone_moonering_ore");
        withExistingParent("sleepingstone_jantic_ore");
        withExistingParent("sleepingstone_aljamic_copper_ore");
        withExistingParent("sleepingstone_aljamic_tin_ore");
        withExistingParent("guava_planks");
        withExistingParent("guava_stairs");
        withExistingParent("guava_slab");
        withExistingParent("guava_fence", modLoc("block/guava_fence_inventory"));
        withExistingParent("guava_fence_gate");
        withExistingParent("guava_log");
        withExistingParent("guava_wood");
        withExistingParent("stripped_guava_log");
        withExistingParent("stripped_guava_wood");
        withExistingParent("guava_leaves");
        withExistingParent("guava_button", modLoc("block/guava_button_inventory"));
        withExistingParent("guava_trapdoor", modLoc("block/guava_trapdoor_bottom"));
        withExistingParent("guava_pressure_plate");
        withExistingParent("glazed_tabu");
        withExistingParent("cubic_tabu");
        withExistingParent("cubic_tabu_stairs");
        withExistingParent("cubic_tabu_slab");
        withExistingParent("tabu_mosaic");
        withExistingParent("tabu_mosaic_stairs");
        withExistingParent("tabu_mosaic_slab");
        withExistingParent("tabu_pillar");
        withExistingParent("chiseled_hillaried_stone");
        withExistingParent("chiseled_hillaried_stone_bucket");
        withExistingParent("hillaried_stone_pillar");
        withExistingParent("mangaed_mango_oak_leaves");
        withExistingParent("aljamic_dirt_path");
        withExistingParent("mid_hillary_block");
        withExistingParent("leandro_toy");
        withExistingParent("teenager_alice_toy");
        withExistingParent("queen_sophie_pet_relic");
        withExistingParent("aljamic_sand");
        withExistingParent("aljamic_glass");
        withExistingParent("jantical_block");
        withExistingParent("guava_grape_vine_post", modLoc("block/grape_vine_posts/guava"));
        withExistingParent("aljansteel_block");
        withExistingParent("goldenwood_leaves");
        withExistingParent("enchanted_goldenwood_leaves");
        withExistingParent("goldenwood_log");
        withExistingParent("goldenwood_wood");
        withExistingParent("stripped_goldenwood_log");
        withExistingParent("stripped_goldenwood_wood");
        withExistingParent("goldenwood_planks");
        withExistingParent("goldenwood_stairs");
        withExistingParent("goldenwood_slab");
        withExistingParent("goldenwood_fence", modLoc("block/goldenwood_fence_inventory"));
        withExistingParent("goldenwood_fence_gate");
        withExistingParent("goldenwood_pressure_plate");
        withExistingParent("goldenwood_button", modLoc("block/goldenwood_button_inventory"));
        withExistingParent("goldenwood_trapdoor", modLoc("block/goldenwood_trapdoor_bottom"));
        withExistingParent("goldenwood_grape_vine_post", modLoc("block/grape_vine_posts/goldenwood"));
        withExistingParent("jabuticaba_leaves");
        withExistingParent("jabuticaba_log");
        withExistingParent("jabuticaba_wood");
        withExistingParent("stripped_jabuticaba_log");
        withExistingParent("stripped_jabuticaba_wood");
        withExistingParent("jabuticaba_planks");
        withExistingParent("jabuticaba_stairs");
        withExistingParent("jabuticaba_slab");
        withExistingParent("jabuticaba_fence", modLoc("block/jabuticaba_fence_inventory"));
        withExistingParent("jabuticaba_fence_gate");
        withExistingParent("jabuticaba_pressure_plate");
        withExistingParent("jabuticaba_button", modLoc("block/jabuticaba_button_inventory"));
        withExistingParent("jabuticaba_grape_vine_post", modLoc("block/grape_vine_posts/jabuticaba"));
        withExistingParent("avondalic_nylium");
        withExistingParent("avondalic_willow_log");
        withExistingParent("avondalic_willow_wood");
        withExistingParent("stripped_avondalic_willow_log");
        withExistingParent("stripped_avondalic_willow_wood");
        withExistingParent("avondalic_willow_planks");
        withExistingParent("avondalic_willow_stairs");
        withExistingParent("avondalic_willow_slab");
        withExistingParent("avondalic_willow_fence", modLoc("block/avondalic_willow_fence_inventory"));
        withExistingParent("avondalic_willow_fence_gate");
        withExistingParent("avondalic_willow_pressure_plate");
        withExistingParent("avondalic_willow_button", modLoc("block/avondalic_willow_button_inventory"));
        withExistingParent("avondalic_willow_grape_vine_post", modLoc("block/grape_vine_posts/avondalic_willow"));
        withExistingParent("stripped_crystalline_birch_log");
        withExistingParent("stripped_crystalline_birch_wood");
        withExistingParent("avondalic_willow_leaves");
        withExistingParent("jabuticaba_trapdoor", modLoc("block/jabuticaba_trapdoor_bottom"));
        withExistingParent("hillaried_stone");
        withExistingParent("hillaried_stone_stairs");
        withExistingParent("hillaried_stone_slab");
        withExistingParent("hillaried_stone_wall", modLoc("block/hillaried_stone_wall_inventory"));
        withExistingParent("chocolate_naked_cake");
        withExistingParent("avondalic_willow_trapdoor", modLoc("block/avondalic_willow_trapdoor_bottom"));
        withExistingParent("cork_oak_log");
        withExistingParent("cork_oak_wood");
        withExistingParent("stripped_cork_oak_log");
        withExistingParent("stripped_cork_oak_wood");
        withExistingParent("cork_oak_planks");
        withExistingParent("cork_oak_stairs");
        withExistingParent("cork_oak_slab");
        withExistingParent("cork_oak_fence", modLoc("block/cork_oak_fence_inventory"));
        withExistingParent("cork_oak_fence_gate");
        withExistingParent("cork_oak_pressure_plate");
        withExistingParent("cork_oak_button", modLoc("block/cork_oak_button_inventory"));
        withExistingParent("cork_oak_grape_vine_post", modLoc("block/grape_vine_posts/cork_oak"));
        withExistingParent("cork_oak_trapdoor", modLoc("block/cork_oak_trapdoor_bottom"));
        withExistingParent("cork_oak_leaves");
        withExistingParent("crystalline_birch_grape_vine_post", modLoc("block/grape_vine_posts/crystalline_birch"));
        withExistingParent("coldterm_bricks");
        withExistingParent("coldterm_brick_stairs");
        withExistingParent("coldterm_brick_slab");
        withExistingParent("coldterm_brick_wall", modLoc("block/coldterm_brick_wall_inventory"));
        withExistingParent("warmterm_bricks");
        withExistingParent("warmterm_brick_stairs");
        withExistingParent("warmterm_brick_slab");
        withExistingParent("warmterm_brick_wall", modLoc("block/warmterm_brick_wall_inventory"));
        withExistingParent("obsiditerm_bricks");
        withExistingParent("obsiditerm_brick_stairs");
        withExistingParent("obsiditerm_brick_slab");
        withExistingParent("obsiditerm_brick_wall", modLoc("block/obsiditerm_brick_wall_inventory"));
        withExistingParent("mossy_angelic_brick_wall", modLoc("block/mossy_angelic_brick_wall_inventory"));
        withExistingParent("mossy_angelic_bricks");
        withExistingParent("mossy_angelic_brick_stairs");
        withExistingParent("mossy_angelic_brick_slab");
        withExistingParent("angelic_pillar");
        withExistingParent("insomnia_sophie_head");
        withExistingParent("raw_aljamic_copper_block");
        withExistingParent("raw_aljamic_tin_block");
        withExistingParent("warmterm_block");
        withExistingParent("coldterm_block");
        withExistingParent("chiseled_obsiditerm");

        ModelFile generated = getExistingFile(mcLoc("item/generated"));
        ModelFile handheld = getExistingFile(mcLoc("item/handheld"));
        ModelFile handheld32x = getExistingFile(modLoc("item/handheld_thirty_two"));

        // From pre-data generation era. / From the handwritten JSON files.
        compat("peitoraldeouro");
        sword("empada_de_ouro");
        sword("espada_de_manteiga");
        standard(handheld, "lapis_rainbow");
        compat("tiara_de_gato");
        compat("talco_de_agua");
        compat("hilary_bucket");
        compat("spath_simos_drack");
        compat("black_sulios");
        compat("sophie");
        compat("minced_sophie");
        compat("fried_sophie");
        compat("cooked_egg");
        compat("water_jam");
        compat("water_droplet_bread");
        standardWithCustom(generated, "ze_droplet_bread", "water_droplet_bread");
        compat("devil_ingot");
        compat("devil_nugget");
        compat("gel_alcohol");
        compat("wellerman_disc");
        compat("snowman_disc");
        compat("arcade_disc");
        compat("ericwho_disc");
        compat("zonibus_disc");
        compat("back_guide");
        block(generated, "crystalline_birch_sapling");
        standard(handheld, "queen_sophie_summoner_staff");

        // Angelic Items
        compat("angelic_ingot");
        compat("angelic_nugget");
        standard(handheld, "angelic_sword");
        standard(handheld, "angelic_pickaxe");
        standard(handheld, "angelic_shovel");
        standard(handheld, "angelic_axe");
        standard(handheld, "angelic_hoe");
        compat("angelic_helmet");
        compat("angelic_chestplate");
        compat("angelic_leggings");
        compat("angelic_boots");
        compat("angelic_door");

        standard(generated, "hilary_jam");
        standard(generated, "hilary_jam_bread");
        standard(generated, "jam_pot");
        standard(generated, "milklary_bucket");
        standard(generated, "milklary_jam");
        standard(generated, "milklary_jam_bread");
        standard(generated, "glow_berry_jam");
        standard(generated, "glow_berry_jam_bread");
        standard(generated, "devil_door");
        standard(generated, "raw_devil");
        standard(generated, "sweet_berry_jam");
        standard(generated, "sweet_berry_jam_bread");
        standard(handheld, "milked_diamond_sword");
        standard(handheld, "devil_sword");
        standard(handheld, "devil_pickaxe");
        standard(handheld, "devil_shovel");
        standard(handheld, "devil_axe");
        standard(handheld, "devil_hoe");
        standard(handheld, "milked_devil_sword");
        standard(handheld, "olive_pickaxe");
        standard(generated, "chocolate");
        standard(generated, "honeyed_bread");
        standard(generated, "sophie_fragrance");
        standard(generated, "patty");
        block(generated, "cooked_egg_flower");
        standard(generated, "sugar_crash_disc");
        standard(generated, "lagusta");
        standard(generated, "hilary_disinfectant");
        standard(generated, "hilary_deodorant");
        standard(generated, "ievan_polkka_disc");
        standard(generated, "food_bag");
        standard(generated, "food_bag_alt");
        standard(generated, "cheese_bread");
        standard(generated, "cheese_bread_bag");
        standard(generated, "guarana");
        standard(generated, "mango");
        standard(generated, "guarana_juice");
        standard(generated, "mango_juice");
        block(generated, "guarana_oak_sapling");
        block(generated, "mango_oak_sapling");
        standard(generated, "beetroot_soup_pot");
        standard(generated, "mushroom_stew_pot");
        standard(generated, "rabbit_stew_pot");
        standard(generated, "fungi_stew_pot");
        standard(generated, "end_fungi_stew_pot");
        standard(generated, "toti");
        standard(generated, "tito");
        standard(generated, "fabricio");
        standard(generated, "toasted_fabricio");
        standard(generated, "minced_fabricio");
        standard(generated, "cold_fabricio");
        standard(generated, "hot_sophie");
        standard(generated, "mid_term");
        standard(handheld, "mid_term_sword");
        standard(handheld, "mid_term_pickaxe");
        standard(handheld, "mid_term_shovel");
        standard(handheld, "mid_term_axe");
        standard(handheld, "mid_term_hoe");
        standard(generated, "mid_term_door");
        standard(generated, "hilary_lantern");
        standard(generated, "hilary_mid_term_lantern");
        milkedSword("angelic_sword", false);
        milkedSword("mid_term_sword", false);
        block(generated, "red_yellow_flower");
        standard(generated, "milk_pot");
        standard(handheld, "hillary_rod");
        standard(generated, "devil_helmet");
        standard(generated, "devil_chestplate");
        standard(generated, "devil_leggings");
        standard(generated, "devil_boots");
        standard(generated, "mid_term_helmet");
        standard(generated, "mid_term_breastplate");
        standard(generated, "mid_term_leggings");
        standard(generated, "mid_term_boots");
        standard(generated, "devil_dye");
        blockWithCustom(generated, "devil_stained_glass_pane", "devil_stained_glass");
        standard(generated, "hillary_cake");
        standard(generated, "milkllary_cake");
        standard(generated, "choccy_milk_bucket");
        standard(generated, "choccy_milk_bottle");
        standard(generated, "hillary_agglomeratio");
        standard(generated, "milkllary_agglomeratio");
        standard(generated, "rick_roll_disc");
        standard(generated, "beggin_disc");
        standard(generated, "christian_mid_term_ingot");
        block(generated, "hillary_torch");
        standard(generated, "toddy");
        block(generated, "grape_vine_sapling");
        standard(generated, "grapes");
        standard(generated, "grape_juice");
        standard(handheld, "sparey");
        standard(generated, "archer_lucia_hood");
        standard(generated, "archer_lucia_vest");
        standard(handheld, "angelic_rod");
        standard(handheld, "mech_mech");
        standard(generated, "diamond_nugget");
        standard(handheld, "devil_sparey");
        standard(handheld, "milkllary_pickaxe");
        sword("milkllary_sword");
        standard(handheld, "karate_training_stick");
        standard(generated, "yellow_karate_band");
        standard(handheld, "devil_rod");
        block(generated, "aljame_birch_sapling");
        standard(handheld32x, "mid_term_greatsword");

        // Back Math 1.5 items
        compat("christian_mid_term_angelic_alloy_ingot");
        compat("christian_mid_term_devil_alloy_ingot");
        compat("devil_angelic_alloy_ingot");
        compat("mid_term_ingot");
        compat("devil_dust");
        compat("angelic_dust");
        compat("mid_term_dust");
        compat("christian_mid_term_dust");
        compat("temperature_singularity");
        compat("christian_mid_term_nugget");
        compat("mid_term_nugget");
        compat("sophicio_mixture");
        compat("raw_sophicio_mixture");
        compat("milkllarity");
        compat("empty_mold");
        compat("crystallized_mold");
        compat("singularity_mold");
        compat("lucia");
        compat("cooked_lucia");
        compat("minced_lucia");
        compat("ingot_mold");
        compat("milkllary_ingot");
        compat("raw_angelic");
        compat("raw_mid_term");

        // Back Math 1.6 items
        compat("bakugou_hair");
        compat("bakugou_blouse");
        compat("bakugou_pants");
        compat("bakugou_shoes");
        compat("manga_juice");
        compat("devil_warrior_helmet");
        compat("angelic_warrior_helmet");
        compat("mid_term_warrior_helmet");
        compat("obsidian_infused_mid_term_ingot");
        shears("devil");
        shears("angelic");
        shears("mid_term");
        shears("christian_mid_term");
        shears("milkllary");
        compat("aljame");
        compat("lemon");
        compat("lemon_juice");
        block(generated, "lemon_oak_sapling");
        standard(handheld, "obsidian_infused_mid_term_sword");
        standard(handheld, "obsidian_infused_mid_term_sparey");
        standard(handheld, "mid_term_sparey");
        compat("liquid_aljame_bucket");
        compat("nutella_chocolate");
        compat("stay_disc");
        compat("liquid_manga_bucket");
        compat("christian_mid_term_angelic_dust");
        compat("christian_mid_term_devil_dust");
        compat("devil_angelic_dust");
        compat("obsidian_infused_mid_term_dust");
        compat("mold_mold");
        compat("crystalline_empty_mold");
        compat("crystalline_gem_mold");
        compat("regular_molds_book");
        compat("advanced_molds_book");
        compat("crystalline_angelic");
        compat("angelic_door");
        compat("amaracamel_batter");
        compat("hardened_amaracamel_batter");
        compat("amaracamel_batter_bag");
        compat("empty_amaracamel_batter_bag");
        compat("human_patrick");
        compat("cooked_egg_bag");
        compat("empty_cooked_egg_bag");
        compat("orange");
        compat("orange_juice");
        compat("banana");
        compat("banana_juice");
        compat("aljame_juice");
        compat("fried_sophie_fried_egg_meal");
        compat("cooked_lucia_fried_egg_meal");
        compat("toasted_fabricio_fried_egg_meal");
        compat("fried_egg_bread");
        compat("pasta");
        compat("angelic_meal_plate");
        standard(handheld, "spoon");
        compat("hot_sophie_cold_fabricio_meal");
        compat("aljame_tea_box");
        compat("aljame_tea");
        compat("aljame_teacup");
        compat("lagusta_bag");
        compat("empty_lagusta_bag");
        compat("coffee_mug");
        compat("hardened_amaracamel_warrior_helmet");
        compat("hardened_amaracamel_helmet");
        compat("hardened_amaracamel_chestplate");
        compat("hardened_amaracamel_leggings");
        compat("hardened_amaracamel_boots");
        compat("obsidian_infused_mid_term_helmet");
        compat("obsidian_infused_mid_term_breastplate");
        compat("obsidian_infused_mid_term_leggings");
        compat("obsidian_infused_mid_term_boots");
        standard(handheld, "obsidian_infused_mid_term_pickaxe");
        standard(handheld, "obsidian_infused_mid_term_shovel");
        standard(handheld, "obsidian_infused_mid_term_axe");
        standard(handheld, "obsidian_infused_mid_term_hoe");
        compat("obsidian_infused_mid_term_nugget");
        compat("angelic_shears");
        compat("devil_shears");
        compat("christian_mid_term_shears");
        compat("mid_term_shears");
        compat("obsidian_infused_mid_term_shears");
        compat("milkllary_shears");
        compat("energetic_monster");
        compat("monster_energy_drink");
        compat("queen_sophie_battle_pack");
        compat("queen_sophie_battle_info");
        compat("rod_mold");
        compat("pineapple");
        compat("pineapple_juice");
        compat("turtle_fried_egg");
        compat("ender_dragon_fried_egg");
        block(generated, "pineapple_oak_sapling");
        compat("guarana_popsicle");
        compat("mango_popsicle");
        compat("grape_popsicle");
        compat("lemon_popsicle");
        compat("aljame_popsicle");
        compat("orange_popsicle");
        compat("banana_popsicle");
        compat("pineapple_popsicle");
        compat("hillary_popsicle");
        compat("milkllary_popsicle");
        compat("omelet");
        compat("turtle_omelet");
        compat("ender_omelet");
        compat("hillary_bottle");
        compat("milkllary_bottle");
        compat("crystalline_birch_door");
        standard(handheld, "crystalline_birch_stick");
        compat("queen_sophie_relic");
        compat("amaracamel_batter_bread");
        compat("amaracamel_batter_toast");
        compat("raw_minced_sophie");
        compat("raw_minced_fabricio");
        compat("raw_minced_lucia");
        compat("liquefied_monster_bucket");
        compat("mid_hillary_ingot");
        compat("mid_hillary_key");
        milkedSword("obsidian_infused_mid_term_sword", false);
        block(generated, "crystalline_birch_ladder");
        milkedSword("sparey", true);
        milkedSword("devil_sparey", true);
        milkedSword("mid_term_sparey", true);
        milkedSword("obsidian_infused_mid_term_sparey", true);
        compat("mid_term_lantern");
        compat("mid_term_soul_lantern");
        standard(handheld, "milkllary_axe");
        standard(handheld, "milkllary_hoe");
        standard(handheld, "milkllary_shovel");
        compat("water_popsicle");
        compat("friend_sophie_spawn_egg");
        compat("angry_sophie_spawn_egg");
        compat("shy_fabricio_spawn_egg");
        compat("archer_lucia_spawn_egg");
        compat("karate_lucia_spawn_egg");
        compat("insomnia_sophie_spawn_egg");
        compat("archer_insomnia_sophie_spawn_egg");
        compat("queen_sophie_spawn_egg");
        compat("warrior_sophie_spawn_egg");
        compat("queen_sophie_pet_spawn_egg");

        // Back Math 1.6.1 items
        compat("apple_juice");
        compat("apple_jam");
        compat("apple_popsicle");
        compat("melon_juice");
        compat("melon_jam");
        compat("melon_popsicle");
        compat("golden_apple_juice");
        compat("golden_apple_jam");
        compat("golden_apple_popsicle");
        compat("guarana_jam");
        compat("mango_jam");
        compat("grape_jam");
        compat("lemon_jam");
        compat("orange_jam");
        compat("banana_jam");
        compat("aljame_jam");
        compat("pineapple_jam");
        standard(handheld, "stacks");
        standard(handheld, "spavel");
        standard(handheld, "spaxe");
        standard(handheld, "stoe");
        compat("yin_yang");
        compat("manga_jam");
        compat("manga_popsicle");
        compat("obsidian_infused_mid_term");
        milkedSwordMC("wooden_sword");
        milkedSwordMC("stone_sword");
        milkedSwordMC("iron_sword");
        milkedSwordMC("golden_sword");
        milkedSwordMC("netherite_sword");
        standard(handheld, "carewni");
        standard(generated, "milkllary_helmet");
        standard(generated, "milkllary_chestplate");
        standard(generated, "milkllary_leggings");
        standard(generated, "milkllary_boots");
        standard(handheld, "mid_term_rod");

        // Back Math 1.7 content
        standard(generated, "aljameed_ingot");
        standard(generated, "moonering_ingot");
        standard(generated, "raw_aljameed");
        standard(generated, "raw_mooner");
        standard(generated, "aljameed_nugget");
        standard(generated, "moonering_nugget");
        standard(handheld, "aljancap_stick");
        standard(handheld, "aljanwood_stick");
        standard(generated, "charjan_coal");
        standard(handheld, "aljanstone_sword");
        standard(handheld, "aljanstone_pickaxe");
        standard(handheld, "aljanstone_shovel");
        standard(handheld, "aljanstone_axe");
        standard(handheld, "aljanstone_hoe");
        standard(handheld, "aljameed_blade");
        standard(handheld, "aljameed_pick");
        standard(handheld, "aljameed_shovel");
        standard(handheld, "aljameed_axe");
        standard(handheld, "aljameed_hoe");
        standard(generated, "aljanwood_door");
        block(generated, "aljanwood_ladder");
        block(generated, "aljanwood_sapling");
        block(generated, "turtle_fried_egg_flower");
        blockWithCustom(generated, "grape_vines", "grape_vines_top");
        block(generated, "aljan_tulip");
        block(generated, "poison_rose");
        block(generated, "aljanshroom");
        block(generated, "sleepshroom");
        standard(generated, "obsidian_infused_mid_term_door");
        standard(handheld, "aljanwood_sword");
        standard(handheld, "aljanwood_pickaxe");
        standard(handheld, "aljanwood_shovel");
        standard(handheld, "aljanwood_axe");
        standard(handheld, "aljanwood_hoe");
        standard(handheld, "aljancap_sword");
        standard(handheld, "aljancap_pickaxe");
        standard(handheld, "aljancap_shovel");
        standard(handheld, "aljancap_axe");
        standard(handheld, "aljancap_hoe");
        compat("hardened_amaracamel_nugget");
        compat("milkllary_nugget");
        compat("mid_hillary_nugget");
        compat("aljan_fungi_stew");
        compat("aljameed_dust");
        compat("moonering_dust");
        standard(handheld, "moonering_sword");
        standard(handheld, "moonering_pickaxe");
        standard(handheld, "moonering_shovel");
        standard(handheld, "moonering_axe");
        standard(handheld, "moonering_hoe");
        compat("sweet_berry_juice");
        compat("glow_berry_juice");
        compat("sweet_berry_popsicle");
        compat("glow_berry_popsicle");
        compat("guarana_jam_bread");
        compat("mango_jam_bread");
        compat("grape_jam_bread");
        compat("lemon_jam_bread");
        compat("pineapple_jam_bread");
        compat("aljame_jam_bread");
        compat("apple_jam_bread");
        compat("golden_apple_jam_bread");
        compat("melon_jam_bread");
        compat("pumpkin_juice");
        compat("pumpkin_jam");
        compat("pumpkin_popsicle");
        compat("pumpkin_jam_bread");
        compat("manga_jam_bread");
        enchantedGoldenApple("juice");
        enchantedGoldenApple("jam");
        enchantedGoldenApple("popsicle");
        enchantedGoldenApple("jam_bread");
        compat("boot_pack");
        block(generated, "insomnian_tulip");
        block(generated, "insomnian_sapling");
        compat("empty_boot_pack");
        compat("aljameed_helmet");
        compat("aljameed_chestplate");
        compat("aljameed_leggings");
        compat("aljameed_boots");
        compat("moonering_helmet");
        compat("moonering_chestplate");
        compat("moonering_leggings");
        compat("moonering_boots");
        compat("archer_fabricio_hood");
        compat("archer_fabricio_vest");
        compat("aljan_light_blue_dye");
        compat("poison_brown_dye");
        compat("emotional_singularity");
        compat("heat_singularity");
        compat("christianity_singularity");
        compat("frutifery_singularity_backmath");
        compat("frutifery_singularity_minecraft");
        compat("meaty_singularity_sophie");
        compat("meaty_singularity_fabricio");
        compat("meaty_singularity_lucia");
        compat("meaty_singularity_minecraft");
        compat("fishy_singularity");
        compat("vegetably_singularity");
        compat("vegetably_singularity_variants");
        compat("mangibelarity");
        compat("mangaed_mango");
        compat("multi_singularity_frame");
        standard(handheld, "insomnian_stick");
        compat("aljameed_warrior_helmet");
        compat("moonering_warrior_helmet");
        block(generated, "aljancap_sapling");
        compat("jantical");
        compat("aljamic_beef");
        compat("cooked_aljamic_beef");
        compat("aljamic_mutton");
        compat("cooked_aljamic_mutton");
        compat("aljamic_chicken");
        compat("cooked_aljamic_chicken");
        compat("aljamic_porkchop");
        compat("cooked_aljamic_porkchop");
        compat("rotten_aljamic_flesh");
        compat("aljamic_eye");
        block(generated, "aljancap_ladder");
        block(generated, "insomnian_ladder");
        compat("sticky_amaracamel_ball");
        compat("insomnian_dye");
        standard(handheld, "insomnian_sword");
        standard(handheld, "insomnian_pickaxe");
        standard(handheld, "insomnian_shovel");
        standard(handheld, "insomnian_axe");
        standard(handheld, "insomnian_hoe");
        standard(handheld, "olive_sword");
        standard(handheld, "olive_shovel");
        standard(handheld, "olive_axe");
        standard(handheld, "olive_hoe");
        compat("aljameed_shears");
        compat("moonering_shears");
        compat("aljamic_copper_ingot");
        compat("aljamic_tin_ingot");
        block(generated, "sleepyshroom");
        compat("aljamic_bone_helmet");
        compat("dog_tiara");
        compat("insomnia_sophie_sleepwear_blouse");
        compat("insomnia_sophie_sleepwear_pants");
        compat("candy_yellow_turtle_helmet");
        compat("candy_pink_turtle_helmet");
        compat("aljamic_bone_helmet");
        compat("hardened_amaracamel_ingot");
        compat("mid_term_shard");
        compat("obsidian_infused_mid_term_shard");
        compat("milkllarity_shard");
        compat("crystalline_angelic_shard");
        compat("aljamic_flint_and_aljansteel");
        compat("jantskin");
        compat("sleepish_fertilizer");
        standard(handheld, "aljameed_bone");
        standard(handheld, "sleepish_bone");
        block(generated, "banana_jungle_sapling");
        block(generated, "orange_oak_sapling");
        compat("insomnia_zombie_spawn_egg");
        compat("zombie_fabricio_spawn_egg");
        compat("sleepishwater_bucket");
        block(generated, "charjan_wood_torch");
        block(generated, "charjan_aljanwood_torch");
        block(generated, "charjan_aljancap_torch");
        block(generated, "charjan_insomnian_torch");
        compat("aljan_fungi_stew_pot");
        compat("pine_jelly");
        compat("amaracameler_spawn_egg");
        compat("carameled_wheat");
        compat("carameled_wheat_seeds");
        compat("carameled_wheat_flour");
        compat("carameled_wheat_dough");
        compat("aljamic_onion");
        compat("insoflint");
        block(generated, "wild_carameled_wheat");
        compat("mortar_and_pestle");
        compat("aljanwood_mortar_and_pestle");
        compat("aljancap_mortar_and_pestle");
        compat("insomnian_mortar_and_pestle");
        milkedSword("aljanwood_sword", false);
        milkedSword("aljancap_sword", false);
        milkedSword("insomnian_sword", false);
        milkedSword("aljanstone_sword", false);
        milkedSword("moonering_sword", false);
        milkedSword("olive_sword", false);
        getBuilder("milked_aljameed_blade").parent(this.handheld).texture("layer0", "item/aljameed_blade").texture("layer1", "item/milked_aljameed_blade_base");
        compat("cookie_pot");
        compat("devil_chain");
        compat("angelic_chain");
        compat("milkllary_chain");
        compat("mid_hillary_chain");
        compat("mid_term_chain");
        compat("obsidian_infused_mid_term_chain");
        compat("christian_mid_term_chain");
        compat("aljameed_chain");
        compat("moonering_chain");
        compat("malaika_spawn_egg");
        compat("raw_aljamic_copper");
        compat("raw_aljamic_tin");
        compat("janticle_spawn_egg");
        compat("jantical_shard");
        compat("jantiquified_aljame");
        getBuilder("holy_jantiquified_aljame").parent(generated).texture("layer0", "item/jantiquified_aljame");
        compat("jantskin_helmet");
        compat("jantskin_chestplate");
        compat("jantskin_leggings");
        compat("jantskin_boots");
        compat("aljamic_bones_spawn_egg");
        compat("sleepish_skeleton_spawn_egg");

        // Back Math 1.8.0
        compat("guava");
        compat("guava_juice");
        compat("guava_popsicle");
        compat("guava_jam");
        compat("guava_jam_bread");
        compat("cut_guava");
        compat("jabuticaba");
        compat("jabuticabada");
        compat("jabuticaba_popsicle");
        compat("jabuticaba_jam");
        compat("jabuticaba_jam_bread");
        compat("cut_jabuticaba");
        compat("jabuticaba_wine");
        compat("cut_guarana");
        compat("cut_mango");
        compat("cut_grapes");
        compat("cut_lemon");
        compat("cut_pineapple");
        compat("cut_orange");
        compat("cut_banana");
        compat("cut_aljame");
        compat("orange_jam_bread");
        compat("banana_jam_bread");
        compat("wine");
        compat("cebolinha_hair_strand");
        compat("cork_stopper");
        sword("cork_oak_sword");
        standard(handheld, "cork_oak_pickaxe");
        standard(handheld, "cork_oak_shovel");
        standard(handheld, "cork_oak_axe");
        standard(handheld, "cork_oak_hoe");
        block(generated, "guava_sapling");
        compat("guava_door");
        compat("aljamic_berry");
        compat("aljamic_berry_juice");
        compat("aljamic_berry_popsicle");
        compat("aljamic_berry_jam");
        compat("aljamic_berry_jam_bread");
        compat("cut_aljamic_berry");
        compat("amaracamel_juice");
        compat("mortadella");
        standard(handheld, "pink_gum_frying_pan");
        block(generated, "guava_ladder");
        standard(handheld, "guava_stick");
        compat("aljanwood_boat");
        compat("cut_jantiquified_aljame");
        getBuilder("cut_holy_jantiquified_aljame").parent(generated).texture("layer0", "item/cut_jantiquified_aljame");
        compat("golden_halo");
        sword("jantiquified_moonering_sword");
        standard(handheld, "jantiquified_moonering_shovel");
        standard(handheld, "jantiquified_moonering_pickaxe");
        standard(handheld, "jantiquified_moonering_axe");
        standard(handheld, "jantiquified_moonering_hoe");
        standard(handheld, "moonering_backstabber");
        standard(handheld, "moonering_usb_stick");
        sword("persona_blade");
        compat("persona_shard");
        compat("blank_mob_persona_card");
        compat("mob_persona_card_wan_sop");
        compat("mob_persona_card_ang_sop");
        compat("mob_persona_card_shy_fab");
        compat("mob_persona_card_arc_luc");
        compat("mob_persona_card_kar_luc");
        compat("mob_persona_card_ins_sop");
        compat("mob_persona_card_que_sop");
        compat("mob_persona_card_war_sop");
        compat("mob_persona_card_mal");
        compat("chocoglue");
        compat("aljamic_glass_bottle");
        compat("sleepishwater_bottle");
        compat("insomnia_arrow");
        blockWithCustom(generated, "aljamic_glass_pane", "aljamic_glass");
        block(generated, "wild_aljamic_onions");
        compat("glue");
        standard(handheld, "pink_gum_frying_pan");
        compat("obsidian_ingot");
        compat("molten_mid_term_bucket");
        compat("crystallized_guarana_ingot");
        compat("crystallized_mango_ingot");
        compat("crystallized_mangaed_mango_ingot");
        compat("crystallized_grape_ingot");
        compat("crystallized_lemon_ingot");
        compat("crystallized_pineapple_ingot");
        compat("crystallized_orange_ingot");
        compat("crystallized_banana_ingot");
        compat("crystallized_guava_ingot");
        compat("crystallized_jabuticaba_ingot");
        compat("crystallized_aljamic_berry_ingot");
        compat("crystallized_aljame_ingot");
        compat("crystallized_apple_ingot");
        compat("crystallized_golden_apple_ingot");
        getBuilder("crystallized_enchanted_golden_apple_ingot").parent(generated).texture("layer0", "item/crystallized_golden_apple_ingot");
        compat("crystallized_melon_ingot");
        compat("crystallized_pumpkin_ingot");
        compat("crystallized_sweet_berry_ingot");
        compat("crystallized_glow_berry_ingot");
        compat("lava_pot");
        compat("powder_snow_pot");
        compat("crystalline_birch_mortar_and_pestle");
        compat("guava_mortar_and_pestle");
        compat("the_flying_arm_disc");
        getBuilder("sophies_dramatic_entrance_1_disc").parent(generated).texture("layer0", "item/sophies_dramatic_entrance_disc");
        getBuilder("sophies_dramatic_entrance_2_disc").parent(generated).texture("layer0", "item/sophies_dramatic_entrance_disc");
        getBuilder("sophies_dramatic_entrance_3_disc").parent(generated).texture("layer0", "item/sophies_dramatic_entrance_disc");
        standard(handheld, "wooden_knife");
        standard(handheld, "stone_knife");
        standard(handheld, "iron_knife");
        standard(handheld, "golden_knife");
        standard(handheld, "diamond_knife");
        standard(handheld, "netherite_knife");
        standard(handheld, "devil_knife");
        standard(handheld, "angelic_knife");
        standard(handheld, "mid_term_knife");
        standard(handheld, "obsidian_infused_mid_term_knife");
        standard(handheld, "milkllary_knife");
        standard(handheld, "olive_knife");
        standard(handheld, "cork_oak_knife");
        standard(handheld, "aljanwood_knife");
        standard(handheld, "aljancap_knife");
        standard(handheld, "insomnian_knife");
        standard(handheld, "aljanstone_knife");
        standard(handheld, "aljameed_knife");
        standard(handheld, "moonering_knife");
        standard(handheld, "jantiquified_moonering_knife");
        compat("bread_with_pao");
        compat("aljamic_aljame_juice");
        compat("aljamic_aljamic_berry_juice");
        compat("green_apple");
        compat("green_apple_juice");
        compat("green_apple_jam");
        compat("green_apple_popsicle");
        compat("green_apple_jam_bread");
        compat("cut_green_apple");
        compat("cut_apple");
        compat("cut_golden_apple");
        getBuilder("cut_enchanted_golden_apple").parent(generated).texture("layer0", "item/cut_golden_apple");
        standard(handheld, "aljansteel_blade");
        getBuilder("milked_aljansteel_blade").parent(this.handheld).texture("layer0", "item/aljansteel_blade").texture("layer1", "item/milked_aljameed_blade_base");
        standard(handheld, "aljansteel_pick");
        standard(handheld, "aljansteel_shovel");
        standard(handheld, "aljansteel_axe");
        standard(handheld, "aljansteel_hoe");
        standard(handheld, "aljansteel_knife");
        compat("aljansteel_shears");
        compat("aljansteel_ingot");
        compat("aljansteel_nugget");
        compat("aljansteel_blend");
        compat("jantiquified_moonering_shears");
        compat("aljansteel_chain");
        compat("pumpkin_slice");
        compat("cut_sweet_berries");
        compat("cut_glow_berries");
        block(generated, "goldenwood_sapling");
        block(generated, "enchanted_goldenwood_sapling");
        compat("goldenwood_door");
        compat("goldenwood_mortar_and_pestle");
        standard(handheld, "goldenwood_knife");
        standard(handheld, "guava_knife");
        standard(handheld, "crystalline_birch_knife");
        standard(handheld, "avondalic_willow_knife");
        sword("avondalic_willow_sword");
        standard(handheld, "avondalic_willow_pickaxe");
        standard(handheld, "avondalic_willow_shovel");
        standard(handheld, "avondalic_willow_axe");
        standard(handheld, "avondalic_willow_hoe");
        standard(handheld, "avondalic_willow_stick");
        compat("avondalic_willow_mortar_and_pestle");
        compat("avondalic_willow_door");
        compat("avondalic_willow_boat");
        block(generated, "jabuticaba_sapling");
        sword("crystalline_birch_sword");
        standard(handheld, "crystalline_birch_pickaxe");
        standard(handheld, "crystalline_birch_shovel");
        standard(handheld, "crystalline_birch_axe");
        standard(handheld, "crystalline_birch_hoe");
        sword("goldenwood_sword");
        standard(handheld, "goldenwood_pickaxe");
        standard(handheld, "goldenwood_shovel");
        standard(handheld, "goldenwood_axe");
        standard(handheld, "goldenwood_hoe");
        sword("guava_sword");
        standard(handheld, "guava_pickaxe");
        standard(handheld, "guava_shovel");
        standard(handheld, "guava_axe");
        standard(handheld, "guava_hoe");
        sword("jabuticaba_sword");
        standard(handheld, "jabuticaba_pickaxe");
        standard(handheld, "jabuticaba_shovel");
        standard(handheld, "jabuticaba_axe");
        standard(handheld, "jabuticaba_hoe");
        standard(handheld, "jabuticaba_knife");
        compat("jabuticaba_mortar_and_pestle");
        compat("jabuticaba_door");
        standard(handheld, "jabuticaba_stick");
        standard(handheld, "cork_oak_stick");
        standard(handheld, "goldenwood_stick");
        compat("patience_tea");
        compat("peace_tea");
        compat("disgust_tea");
        compat("mood_tea");
        block(generated, "avondalic_willow_sapling");
        block(generated, "avondalic_willow_ladder");
        block(generated, "jabuticaba_ladder");
        block(generated, "goldenwood_ladder");
        compat("cork_oak_door");
        sword("sleepingstone_sword");
        standard(handheld, "sleepingstone_pickaxe");
        standard(handheld, "sleepingstone_shovel");
        standard(handheld, "sleepingstone_axe");
        standard(handheld, "sleepingstone_hoe");
        standard(handheld, "sleepingstone_knife");
        block(generated, "cork_oak_ladder");
        block(generated, "mangaed_mango_oak_sapling");
        compat("turtle_fried_egg_bag");
        compat("empty_turtle_fried_egg_bag");
        compat("ender_dragon_fried_egg_bag");
        compat("empty_ender_dragon_fried_egg_bag");
        block(generated, "ender_dragon_fried_egg_flower");
        block(generated, "crystalline_birch_ladder");
        compat("crushed_devil_ore");
        compat("crushed_angelic_ore");
        compat("crushed_mid_term_ore");
        compat("crushed_christian_mid_term");
        compat("crushed_aljameed_ore");
        compat("crushed_moonering_ore");
        compat("obsidian_infused_mid_term_warrior_helmet");
        compat("upgrade_token_flame");
        compat("upgrade_token_crystallizer_upg");
        compat("upgrade_token_base");
        compat("queen_lucy_shirt_current");
        compat("queen_lucy_shirt_alt");
        compat("queen_lucy_shirt_relic");
        compat("warmterm_ingot");
        compat("coldterm_ingot");
        compat("superheater");
        block(generated, "charjan_crystalline_birch_torch");
        block(generated, "charjan_goldenwood_torch");
        block(generated, "charjan_guava_torch");
        block(generated, "charjan_jabuticaba_torch");
        block(generated, "charjan_cork_oak_torch");
        block(generated, "charjan_avondalic_willow_torch");
        block(generated, "charjan_hillary_torch");
        block(generated, "charjan_devil_torch");
        block(generated, "charjan_angelic_torch");
        block(generated, "charjan_mid_term_torch");
        block(generated, "charjan_aljameed_torch");
        compat("cork_oak_mortar_and_pestle");
        block(generated, "cork_oak_sapling");
    }

    private ItemModelBuilder standard(ModelFile model, String name) {
        return getBuilder(name).parent(model).texture("layer0", "item/" + name);
    }

    private ItemModelBuilder standardWithCustom(ModelFile model, String name, String texName) {
        return getBuilder(name).parent(model).texture("layer0", "item/" + texName);
    }

    private ItemModelBuilder block(ModelFile model, String name) {
        return getBuilder(name).parent(model).texture("layer0", "block/" + name);
    }

    private ItemModelBuilder blockWithCustom(ModelFile model, String fileName, String blockName) {
        return getBuilder(fileName).parent(model).texture("layer0", "block/" + blockName);
    }

    private ItemModelBuilder enchantedGoldenApple(String thing) {
        return getBuilder("enchanted_golden_apple_" + thing).parent(generated).texture("layer0", "item/golden_apple_" + thing);
    }

    private ItemModelBuilder milkedSword(String originalSword, boolean isSparey) {
        return getBuilder("milked_" + originalSword).parent(handheld).texture("layer0", "item/" + originalSword).texture("layer1", isSparey ? "item/milked_sparey_base" : "item/milked_sword_base");
    }

    private ItemModelBuilder milkedSwordMC(String originalSword) {
        return getBuilder("milked_" + originalSword).parent(handheld).texture("layer0", "minecraft:item/" + originalSword).texture("layer1", "item/milked_sword_base");
    }

    private ItemModelBuilder compat(String item) {
        return getBuilder(item).parent(generated).texture("layer0", "item/" + item);
    }

    private ItemModelBuilder shears(String material) {
        return getBuilder(material + "_shears").parent(generated).texture("layer0", "item/" + material  + "_shears");
    }

    private ItemModelBuilder withExistingParent(String name) {
        return withExistingParent(name, modLoc("block/" + name));
    }

    private ItemModelBuilder sword(String name) {
        this.milkedSword(name, false);
        return getBuilder(name).parent(handheld).texture("layer0", "item/" + name);
    }
}
