package com.sophicreeper.backmath.data.models;

import com.sophicreeper.backmath.BackMath;
import net.minecraft.data.DataGenerator;
import net.minecraftforge.client.model.generators.ModelFile;
import net.minecraftforge.common.data.ExistingFileHelper;

import javax.annotation.Nonnull;

public class BMItemModelProvider extends BMItemModelModels {
    public BMItemModelProvider(DataGenerator generator, ExistingFileHelper fileHelper) {
        super(generator, BackMath.MOD_ID, fileHelper);
    }

    @Override
    @Nonnull
    public String getName() {
        return "Back Math - Item Models";
    }

    @Override
    protected void registerModels() {
        ModelFile generated = getExistingFile(mcLoc("item/generated"));
        ModelFile handheld = getExistingFile(mcLoc("item/handheld"));

        block("crystalline_birch_log");
        block("crystalline_birch_wood");
        block("stripped_crystalline_birch_log");
        block("stripped_crystalline_birch_wood");
        block("crystalline_birch_leaves");
        blockItem("crystalline_birch_sapling");
        block("crystalline_birch_planks");
        block("crystalline_birch_stairs");
        block("crystalline_birch_slab");
        block("crystalline_birch_fence", "_inventory");
        block("crystalline_birch_fence_gate");
        grapeVinePost("crystalline_birch");
        standard(generated, "crystalline_birch_door");
        block("crystalline_birch_trapdoor", "_bottom");
        block("crystalline_birch_pressure_plate");
        block("crystalline_birch_button", "_inventory");
        blockItem("crystalline_birch_ladder");
        blockItem("charjan_crystalline_birch_torch");
        block("goldenwood_log");
        block("goldenwood_wood");
        block("stripped_goldenwood_log");
        block("stripped_goldenwood_wood");
        block("goldenwood_leaves");
        block("enchanted_goldenwood_leaves");
        blockItem("goldenwood_sapling");
        blockItem("enchanted_goldenwood_sapling");
        block("goldenwood_planks");
        block("goldenwood_stairs");
        block("goldenwood_slab");
        block("goldenwood_fence", "_inventory");
        block("goldenwood_fence_gate");
        grapeVinePost("goldenwood");
        standard(generated, "goldenwood_door");
        block("goldenwood_trapdoor", "_bottom");
        block("goldenwood_pressure_plate");
        block("goldenwood_button", "_inventory");
        blockItem("goldenwood_ladder");
        blockItem("charjan_goldenwood_torch");
        block("guava_log");
        block("guava_wood");
        block("stripped_guava_log");
        block("stripped_guava_wood");
        block("guava_leaves");
        blockItem("guava_sapling");
        block("guava_planks");
        block("guava_stairs");
        block("guava_slab");
        block("guava_fence", "_inventory");
        block("guava_fence_gate");
        grapeVinePost("guava");
        standard(generated, "guava_door");
        block("guava_trapdoor", "_bottom");
        block("guava_pressure_plate");
        block("guava_button", "_inventory");
        blockItem("guava_ladder");
        blockItem("charjan_guava_torch");
        block("jabuticaba_log");
        block("jabuticaba_wood");
        block("stripped_jabuticaba_log");
        block("stripped_jabuticaba_wood");
        block("jabuticaba_leaves");
        blockItem("jabuticaba_sapling");
        block("jabuticaba_planks");
        block("jabuticaba_stairs");
        block("jabuticaba_slab");
        block("jabuticaba_fence", "_inventory");
        block("jabuticaba_fence_gate");
        grapeVinePost("jabuticaba");
        standard(generated, "jabuticaba_door");
        block("jabuticaba_trapdoor", "_bottom");
        block("jabuticaba_pressure_plate");
        block("jabuticaba_button", "_inventory");
        blockItem("jabuticaba_ladder");
        blockItem("charjan_jabuticaba_torch");
        block("cork_oak_log");
        block("cork_oak_wood");
        block("stripped_cork_oak_log");
        block("stripped_cork_oak_wood");
        block("cork_oak_leaves");
        blockItem("cork_oak_sapling");
        block("cork_oak_planks");
        block("cork_oak_stairs");
        block("cork_oak_slab");
        block("cork_oak_fence", "_inventory");
        block("cork_oak_fence_gate");
        grapeVinePost("cork_oak");
        standard(generated, "cork_oak_door");
        block("cork_oak_trapdoor", "_bottom");
        block("cork_oak_pressure_plate");
        block("cork_oak_button", "_inventory");
        blockItem("cork_oak_ladder");
        blockItem("charjan_cork_oak_torch");
        block("aljanwood_log");
        block("aljanwood_wood");
        block("stripped_aljanwood_log");
        block("stripped_aljanwood_wood");
        block("aljanwood_leaves");
        blockItem("aljanwood_sapling");
        block("aljanwood_planks");
        block("aljanwood_stairs");
        block("aljanwood_slab");
        block("aljanwood_fence", "_inventory");
        block("aljanwood_fence_gate");
        grapeVinePost("aljanwood");
        standard(generated, "aljanwood_door");
        block("aljanwood_trapdoor", "_bottom");
        block("aljanwood_pressure_plate");
        block("aljanwood_button", "_inventory");
        blockItem("aljanwood_ladder");
        blockItem("charjan_aljanwood_torch");
        block("aljan_light_blue_stained_glass");
        glassPane("aljan_light_blue_stained_glass");
        block("aljancap_log");
        block("aljancap_wood");
        block("stripped_aljancap_log");
        block("stripped_aljancap_wood");
        block("aljancap_leaves");
        block("amaracap_leaves");
        blockItem("aljancap_sapling");
        block("aljancap_planks");
        block("aljancap_stairs");
        block("aljancap_slab");
        block("aljancap_fence", "_inventory");
        block("aljancap_fence_gate");
        grapeVinePost("aljancap");
        standard(generated, "aljancap_door");
        block("aljancap_trapdoor", "_bottom");
        block("aljancap_pressure_plate");
        block("aljancap_button", "_inventory");
        blockItem("aljancap_ladder");
        blockItem("charjan_aljancap_torch");
        block("poison_brown_stained_glass");
        glassPane("poison_brown_stained_glass");
        block("insomnian_log");
        block("insomnian_wood");
        block("stripped_insomnian_log");
        block("stripped_insomnian_wood");
        block("insomnian_leaves");
        blockItem("insomnian_sapling");
        block("insomnian_planks");
        block("insomnian_stairs");
        block("insomnian_slab");
        block("insomnian_fence", "_inventory");
        block("insomnian_fence_gate");
        grapeVinePost("insomnian");
        standard(generated, "insomnian_door");
        block("insomnian_trapdoor", "_bottom");
        block("insomnian_pressure_plate");
        block("insomnian_button", "_inventory");
        blockItem("insomnian_ladder");
        blockItem("charjan_insomnian_torch");
        block("insomnian_stained_glass");
        glassPane("insomnian_stained_glass");
        block("avondalic_willow_log");
        block("avondalic_willow_wood");
        block("stripped_avondalic_willow_log");
        block("stripped_avondalic_willow_wood");
        block("avondalic_willow_leaves");
        blockItem("avondalic_willow_sapling");
        block("avondalic_willow_planks");
        block("avondalic_willow_stairs");
        block("avondalic_willow_slab");
        block("avondalic_willow_fence", "_inventory");
        block("avondalic_willow_fence_gate");
        grapeVinePost("avondalic_willow");
        standard(generated, "avondalic_willow_door");
        block("avondalic_willow_trapdoor", "_bottom");
        block("avondalic_willow_pressure_plate");
        block("avondalic_willow_button", "_inventory");
        blockItem("avondalic_willow_ladder");
        blockItem("charjan_avondalic_willow_torch");
        block("tabu");
        block("glazed_tabu");
        block("cubic_tabu");
        block("cubic_tabu_stairs");
        block("cubic_tabu_slab");
        block("tabu_mosaic");
        block("tabu_mosaic_stairs");
        block("tabu_mosaic_slab");
        block("tabu_pillar");
        block("hillaried_stone");
        block("hillaried_stone_stairs");
        block("hillaried_stone_slab");
        block("hillaried_stone_wall", "_inventory");
        block("chiseled_hillaried_stone");
        block("chiseled_hillaried_stone_bucket");
        block("hillaried_stone_pillar");
        block("aljanstone");
        block("aljanstone_stairs");
        block("aljanstone_slab");
        block("aljanstone_wall", "_inventory");
        block("cobbled_aljanstone");
        block("cobbled_aljanstone_stairs");
        block("cobbled_aljanstone_slab");
        block("cobbled_aljanstone_wall", "_inventory");
        block("smooth_aljanstone");
        block("smooth_aljanstone_slab");
        block("aljanstone_bricks");
        block("aljanstone_brick_stairs");
        block("aljanstone_brick_slab");
        block("aljanstone_brick_wall", "_inventory");
        block("chiseled_aljanstone_fabricio");
        block("chiseled_aljanstone_june");
        block("chiseled_aljanstone_sophie");
        block("chiseled_aljanstone_lucia");
        block("chiseled_aljanstone_creeper");
        block("raw_aljamic_copper_block");
        block("aljamic_copper_ore");
        block("raw_aljamic_tin_block");
        block("aljamic_tin_ore");
        block("aljameed_ore");
        block("aljameed_block");
        block("aljansteel_block");
        block("raw_aljameed_block");
        standard(generated, "aljameed_chain");
        standard(generated, "aljansteel_chain");
        blockItem("charjan_aljameed_torch");
        block("aljameed_pressure_plate");
        block("aljameed_button", "_inventory");
        block("jantic_ore");
        block("jantical_block");
        block("aljamic_grass_block");
        block("avondalic_nylium");
        block("aljamic_dirt");
        block("aljamic_dirt_path");
        block("aljamic_farmland");
        block("aljamic_sand");
        block("aljamic_glass");
        glassPane("aljamic_glass");
        block("sleepingstone");
        block("sleepingstone_stairs");
        block("sleepingstone_slab");
        block("sleepingstone_wall", "_inventory");
        block("polished_sleepingstone");
        block("polished_sleepingstone_stairs");
        block("polished_sleepingstone_slab");
        block("polished_sleepingstone_wall", "_inventory");
        block("sleepingstone_bricks");
        block("sleepingstone_brick_stairs");
        block("sleepingstone_brick_slab");
        block("sleepingstone_brick_wall", "_inventory");
        block("chiseled_sleepingstone_fabricio");
        block("chiseled_sleepingstone_june");
        block("chiseled_sleepingstone_sophie");
        block("chiseled_sleepingstone_lucia");
        block("chiseled_sleepingstone_creeper");
        block("insogravel");
        block("aljan_portal_stand");
        block("moonering_ore");
        block("moonering_block");
        block("raw_mooner_block");
        standard(generated, "moonering_chain");
        block("moonering_pressure_plate");
        block("moonering_button", "_inventory");
        block("sleepingstone_aljamic_copper_ore");
        block("sleepingstone_aljamic_tin_ore");
        block("sleepingstone_aljameed_ore");
        block("sleepingstone_moonering_ore");
        block("sleepingstone_jantic_ore");
        block("devil_ore");
        block("deepslate_devil_ore");
        block("nether_devil_ore");
        block("devil_block");
        block("chiseled_devil_block");
        block("sophie_chiseled_devil_block");
        block("devil_angelic_alloy_block");
        block("raw_devil_block");
        block("devil_stairs");
        block("devil_slab");
        block("devil_wall", "_inventory");
        block("devil_fence", "_inventory");
        block("devil_fence_gate");
        block("devil_bricks");
        block("devil_brick_stairs");
        block("devil_brick_slab");
        block("devil_brick_wall", "_inventory");
        block("devil_wool");
        block("devil_carpet");
        block("devil_terracotta");
        block("devil_glazed_terracotta");
        block("devil_concrete_powder");
        block("devil_concrete");
        block("devil_stained_glass");
        glassPane("devil_stained_glass");
        standard(generated, "devil_door");
        block("devil_trapdoor", "_bottom");
        block("devil_pressure_plate");
        block("devil_button", "_inventory");
        standard(generated, "devil_chain");
        blockItem("charjan_devil_torch");
        block("angelic_ore");
        block("deepslate_angelic_ore");
        block("crystalline_angelic_ore");
        block("angelical_casing");
        block("crystallizer", "_empty_mold");
        block("crystalline_crystallizer", "_empty_mold");
        block("angelic_block");
        block("crystalline_angelic_block");
        block("raw_angelic_block");
        block("angelic_pillar");
        block("angelic_bricks");
        block("angelic_brick_stairs");
        block("angelic_brick_slab");
        block("angelic_brick_wall", "_inventory");
        block("cracked_angelic_bricks");
        block("mossy_angelic_bricks");
        block("mossy_angelic_brick_stairs");
        block("mossy_angelic_brick_slab");
        block("mossy_angelic_brick_wall", "_inventory");
        standard(generated, "angelic_door");
        block("angelic_trapdoor", "_bottom");
        block("angelic_pressure_plate");
        block("angelic_button", "_inventory");
        standard(generated, "angelic_chain");
        blockItem("charjan_angelic_torch");
        block("christian_mid_term_block");
        block("christian_mid_term_devil_alloy_block");
        block("christian_mid_term_angelic_alloy_block");
        standard(generated, "christian_mid_term_chain");
        block("mid_term_ore");
        block("obsidian_mid_term_ore");
        block("mid_term_block");
        block("raw_mid_term_block");
        block("coldterm_block");
        block("coldterm_bricks");
        block("coldterm_brick_stairs");
        block("coldterm_brick_slab");
        block("coldterm_brick_wall", "_inventory");
        block("warmterm_block");
        block("warmterm_bricks");
        block("warmterm_brick_stairs");
        block("warmterm_brick_slab");
        block("warmterm_brick_wall", "_inventory");
        block("chiseled_obsiditerm");
        block("obsiditerm_bricks");
        block("obsiditerm_brick_stairs");
        block("obsiditerm_brick_slab");
        block("obsiditerm_brick_wall", "_inventory");
        standard(generated, "mid_term_door");
        block("mid_term_trapdoor", "_bottom");
        standard(generated, "mid_term_chain");
        blockItem("charjan_mid_term_torch");
        standard(generated, "mid_term_lantern");
        standard(generated, "mid_term_soul_lantern");
        standard(generated, "hilary_mid_term_lantern");
        block("obsidian_infused_mid_term_block");
        standard(generated, "obsidian_infused_mid_term_door");
        block("obsidian_infused_mid_term_trapdoor", "_bottom");
        standard(generated, "obsidian_infused_mid_term_chain");
        standard(generated, "hilary_lantern");
        blockItem("hillary_torch");
        blockItem("charjan_hillary_torch");
        block("milkllary_block");
        standard(generated, "milkllary_chain");
        block("mid_hillary_block");
        standard(generated, "mid_hillary_chain");
        block("hardened_amaracamel_block");
        block("sticky_amaracamel_block");
        block("carameled_hay_bale");
        block("charjan_coal_block");
        block("emeriond_block");
        block("guarana_oak_leaves");
        block("mango_oak_leaves");
        block("mangaed_mango_oak_leaves");
        block("grape_vine_leaves");
        block("lemon_oak_leaves");
        block("pineapple_oak_leaves");
        block("orange_oak_leaves");
        block("banana_jungle_leaves");
        block("aljame_birch_leaves");
        blockItem("guarana_oak_sapling");
        blockItem("mango_oak_sapling");
        blockItem("mangaed_mango_oak_sapling");
        blockItem("grape_vine_sapling");
        blockItem("lemon_oak_sapling");
        blockItem("pineapple_oak_sapling");
        blockItem("orange_oak_sapling");
        blockItem("banana_jungle_sapling");
        blockItem("aljame_birch_sapling");
        grapeVinePost("oak");
        grapeVinePost("spruce");
        grapeVinePost("birch");
        grapeVinePost("birch");
        grapeVinePost("jungle");
        grapeVinePost("acacia");
        grapeVinePost("dark_oak");
        grapeVinePost("crimson");
        grapeVinePost("warped");
        blockItem("red_yellow_flower");
        blockItem("cooked_egg_flower");
        blockItem("turtle_fried_egg_flower");
        blockItem("ender_dragon_fried_egg_flower");
        blockItem("aljan_tulip");
        blockItem("poison_rose");
        blockItem("insomnian_tulip", "_combined");
        blockItem("aljanshroom");
        blockItem("sleepshroom");
        blockItem("sleepyshroom");
        blockItem("wild_carameled_wheat");
        blockItem("wild_aljamic_onions");
        block("meal_cooker");
        block("alice_toy");
        block("alan_toy");
        block("innovator_toy");
        block("tyler_toy");
        block("malena_toy");
        block("leandro_toy");
        block("teenager_alice_toy");
        standard(generated, "tito");
        standard(generated, "toti");
        block("angry_sophie_head");
        block("insomnia_sophie_head");
        block("zombie_fabricio_head");
        block("queen_sophie_head", "_ground");
        standard(generated, "queen_sophie_relic");
        block("queen_sophie_pet_relic");
        blockItem("charjan_wood_torch");


        // TODO: Items
        standard(generated, "charjan_coal");
        standard(generated, "raw_devil");
        standard(generated, "raw_angelic");
        standard(generated, "raw_mid_term");
        standard(generated, "raw_aljameed");
        standard(generated, "raw_aljamic_copper");
        standard(generated, "raw_aljamic_tin");
        standard(generated, "raw_mooner");
        standard(generated, "crushed_devil_ore");
        standard(generated, "crushed_angelic_ore");
        standard(generated, "crushed_mid_term_ore");
        standard(generated, "crushed_christian_mid_term");
        standard(generated, "crushed_aljameed_ore");
        standard(generated, "crushed_moonering_ore");
        standard(generated, "mid_term");
        standard(generated, "obsidian_infused_mid_term");
        standard(generated, "milkllarity");
        standard(generated, "emotional_singularity");
        standard(generated, "heat_singularity");
        standard(generated, "temperature_singularity");
        standard(generated, "christianity_singularity");
        standard(generated, "mangibelarity");
        standard(generated, "amaracamelarity");
        standard(generated, "yin_yang");
        standard(generated, "frutifery_singularity_backmath");
        standard(generated, "frutifery_singularity_minecraft");
        standard(generated, "meaty_singularity_sophie");
        standard(generated, "meaty_singularity_fabricio");
        standard(generated, "meaty_singularity_lucia");
        standard(generated, "meaty_singularity_minecraft");
        standard(generated, "fishy_singularity");
        standard(generated, "vegetably_singularity");
        standard(generated, "vegetably_singularity_variants");
        standard(generated, "multi_singularity_frame");
        standard(generated, "crystalline_angelic");
        standard(generated, "jantical");
        standard(generated, "cut_jantical");
        standard(generated, "persona_shard");
        standard(generated, "emeriond");
        standard(generated, "milkllarity_shard");
        standard(generated, "mid_term_shard");
        standard(generated, "obsidian_infused_mid_term_shard");
        standard(generated, "crystalline_angelic_shard");
        standard(generated, "jantical_shard");
        standard(generated, "diamond_nugget");
        standard(generated, "devil_nugget");
        standard(generated, "angelic_nugget");
        standard(generated, "milkllary_nugget");
        standard(generated, "mid_hillary_nugget");
        standard(generated, "hardened_amaracamel_nugget");
        standard(generated, "christian_mid_term_nugget");
        standard(generated, "mid_term_nugget");
        standard(generated, "obsidian_infused_mid_term_nugget");
        standard(generated, "aljameed_nugget");
        standard(generated, "aljansteel_nugget");
        standard(generated, "moonering_nugget");
        standard(generated, "devil_ingot");
        standard(generated, "devil_angelic_alloy_ingot");
        standard(generated, "angelic_ingot");
        standard(generated, "milkllary_ingot");
        standard(generated, "mid_hillary_ingot");
        standard(generated, "hardened_amaracamel_batter");
        standard(generated, "hardened_amaracamel_ingot");
        standard(generated, "christian_mid_term_ingot");
        standard(generated, "christian_mid_term_devil_alloy_ingot");
        standard(generated, "christian_mid_term_angelic_alloy_ingot");
        standard(generated, "warmterm_ingot");
        standard(generated, "mid_term_ingot");
        standard(generated, "coldterm_ingot");
        standard(generated, "obsidian_infused_mid_term_ingot");
        standard(generated, "obsidian_ingot");
        standard(generated, "aljameed_ingot");
        standard(generated, "aljansteel_ingot");
        standard(generated, "aljamic_copper_ingot");
        standard(generated, "aljamic_tin_ingot");
        standard(generated, "moonering_ingot");
        standard(generated, "crystallized_guarana_ingot");
        standard(generated, "crystallized_mango_ingot");
        standard(generated, "crystallized_mangaed_mango_ingot");
        standard(generated, "crystallized_grape_ingot");
        standard(generated, "crystallized_lemon_ingot");
        standard(generated, "crystallized_pineapple_ingot");
        standard(generated, "crystallized_orange_ingot");
        standard(generated, "crystallized_banana_ingot");
        standard(generated, "crystallized_guava_ingot");
        standard(generated, "crystallized_jabuticaba_ingot");
        standard(generated, "crystallized_aljamic_berry_ingot");
        standard(generated, "crystallized_aljame_ingot");
        standard(generated, "crystallized_apple_ingot");
        standard(generated, "crystallized_golden_apple_ingot");
        getBuilder("crystallized_enchanted_golden_apple_ingot").parent(generated).texture("layer0", "item/crystallized_golden_apple_ingot");
        standard(generated, "crystallized_melon_ingot");
        standard(generated, "crystallized_pumpkin_ingot");
        standard(generated, "crystallized_sweet_berry_ingot");
        standard(generated, "crystallized_glow_berry_ingot");
        standard(generated, "hilary_bucket");
        standard(generated, "milklary_bucket");
        standard(generated, "liquid_aljame_bucket");
        standard(generated, "liquid_manga_bucket");
        standard(generated, "liquefied_monster_bucket");
        standard(generated, "sleepishwater_bucket");
        standard(generated, "molten_mid_term_bucket");
        standard(handheld, "crystalline_birch_stick");
        standard(handheld, "goldenwood_stick");
        standard(handheld, "guava_stick");
        standard(handheld, "jabuticaba_stick");
        standard(handheld, "cork_oak_stick");
        standard(handheld, "aljanwood_stick");
        standard(handheld, "aljancap_stick");
        standard(handheld, "insomnian_stick");
        standard(handheld, "avondalic_willow_stick");
        standard(handheld, "devil_rod");
        standard(handheld, "angelic_rod");
        standard(handheld, "hillary_rod");
        standard(handheld, "mid_term_rod");
        standard(generated, "human_patrick");
        standard(generated, "cork_stopper");
        standard(generated, "aljanwood_boat");
        standard(generated, "aljancap_boat");
        standard(generated, "insomnian_boat");
        standard(generated, "avondalic_willow_boat");
        standard(generated, "jantiquified_pearl");
        standard(generated, "insoflint");
        standard(generated, "carameled_wheat");
        standard(generated, "carameled_wheat_dough");
        standard(handheld, "aljameed_bone");
        standard(handheld, "sleepish_bone");
        standard(generated, "sleepish_fertilizer");
        standard(generated, "jantskin");
        standard(generated, "sticky_amaracamel_ball");
        standard(generated, "devil_dye");
        standard(generated, "aljan_light_blue_dye");
        standard(generated, "poison_brown_dye");
        standard(generated, "insomnian_dye");
        standard(generated, "angelic_meal_plate");
        standard(generated, "queen_sophie_battle_info");
        standard(generated, "regular_molds_book");
        standard(generated, "advanced_molds_book");
        standard(generated, "aljamic_glass_bottle");
        standard(generated, "sleepishwater_bottle");
        standard(generated, "sophie_fragrance");
        standard(generated, "gel_alcohol");
        standard(generated, "hilary_disinfectant");
        standard(generated, "hilary_deodorant");
        standard(generated, "glue");
        standard(generated, "mid_hillary_key");
        standard(generated, "carameled_wheat_seeds");
        standard(generated, "devil_dust");
        standard(generated, "devil_angelic_dust");
        standard(generated, "angelic_dust");
        standard(generated, "hillary_agglomeratio");
        standard(generated, "milkllary_agglomeratio");
        standard(generated, "two_thirds_hillary_dust");
        standard(generated, "carameled_wheat_flour");
        standard(generated, "christian_mid_term_dust");
        standard(generated, "christian_mid_term_devil_dust");
        standard(generated, "christian_mid_term_angelic_dust");
        standard(generated, "mid_term_dust");
        standard(generated, "obsidian_infused_mid_term_dust");
        standard(generated, "aljameed_dust");
        standard(generated, "aljansteel_blend");
        standard(generated, "moonering_dust");
        standard(generated, "cebolinha_hair_strand");
        standard(generated, "spath_simos_drack");
        standard(generated, "black_sulios");
        standard(generated, "empty_mold");
        standard(generated, "singularity_mold");
        standard(generated, "crystallized_mold");
        standard(generated, "ingot_mold");
        standard(generated, "mold_mold");
        standard(generated, "rod_mold");
        standard(generated, "crystalline_empty_mold");
        standard(generated, "crystalline_gem_mold");
        standard(generated, "upgrade_token_base");
        standard(generated, "upgrade_token_flame");
        standard(generated, "upgrade_token_crystallizer_upg");
        standard(generated, "blank_mob_persona_card");
        standard(generated, "mob_persona_card_wan_sop");
        standard(generated, "mob_persona_card_ang_sop");
        standard(generated, "mob_persona_card_ins_sop");
        standard(generated, "mob_persona_card_war_sop");
        standard(generated, "mob_persona_card_que_sop");
        standard(generated, "mob_persona_card_arc_luc");
        standard(generated, "mob_persona_card_kar_luc");
        standard(generated, "mob_persona_card_shy_fab");
        standard(generated, "mob_persona_card_mal");
        standard(generated, "friend_sophie_spawn_egg");
        standard(generated, "angry_sophie_spawn_egg");
        standard(generated, "insomnia_sophie_spawn_egg");
        standard(generated, "archer_insomnia_sophie_spawn_egg");
        standard(generated, "warrior_sophie_spawn_egg");
        standard(generated, "queen_sophie_spawn_egg");
        standard(generated, "queen_sophie_pet_spawn_egg");
        standard(generated, "archer_lucia_spawn_egg");
        standard(generated, "karate_lucia_spawn_egg");
        standard(generated, "shy_fabricio_spawn_egg");
        standard(generated, "malaika_spawn_egg");
        standard(generated, "insomnia_zombie_spawn_egg");
        standard(generated, "zombie_fabricio_spawn_egg");
        standard(generated, "aljamic_bones_spawn_egg");
        standard(generated, "sleepish_skeleton_spawn_egg");
        standard(generated, "amaracameler_spawn_egg");
        standard(generated, "janticle_spawn_egg");
        standard(generated, "collector_fabricio_spawn_egg");
        standard(generated, "wellerman_disc");
        standard(generated, "snowman_disc");
        standard(generated, "ericwho_disc");
        standard(generated, "arcade_disc");
        standard(generated, "sugar_crash_disc");
        standard(generated, "zonibus_disc");
        standard(generated, "ievan_polkka_disc");
        standard(generated, "rick_roll_disc");
        standard(generated, "beggin_disc");
        standard(generated, "stay_disc");
        standard(generated, "the_flying_arm_disc");
        getBuilder("sophies_dramatic_entrance_1_disc").parent(generated).texture("layer0", "item/sophies_dramatic_entrance_disc");
        getBuilder("sophies_dramatic_entrance_2_disc").parent(generated).texture("layer0", "item/sophies_dramatic_entrance_disc");
        getBuilder("sophies_dramatic_entrance_3_disc").parent(generated).texture("layer0", "item/sophies_dramatic_entrance_disc");
        standard(generated, "back_guide");


        // TODO: Back Math Weaponry
        armorSet(generated, "devil", false, true);
        armorSet(generated, "angelic", false, true);
        armorSet(generated, "hardened_amaracamel", false, true);
        armorSet(generated, "mid_term", true, true);
        armorSet(generated, "obsidian_infused_mid_term", true, true);
        armorSet(generated, "milkllary", false, true);
        armorSet(generated, "jantskin", false, false);
        armorSet(generated, "aljameed", false, true);
        armorSet(generated, "moonering", false, true);
        armorSet(generated, "jantiquified_moonering", false, true);
        oneTextureCrowns("golden", "devil", "angelic", "christian_mid_term", "crystalline_angelic", "aljameed", "moonering");
        twoTextureCrowns("mid_term","obsidian_infused_mid_term", "milkllary", "jantical");
        queenLucyShirts(generated, "current", "alt", "relic");
        standard(generated, "aljamic_bone_helmet");
        standard(generated, "insomnia_sophie_sleepwear_blouse");
        standard(generated, "insomnia_sophie_sleepwear_pants");
        standard(generated, "archer_lucia_hood");
        standard(generated, "archer_lucia_vest");
        standard(generated, "archer_lucia_boots");
        standard(generated, "archer_fabricio_hood");
        standard(generated, "archer_fabricio_vest");
        standard(generated, "bakugou_hair");
        standard(generated, "bakugou_blouse");
        standard(generated, "bakugou_pants");
        standard(generated, "bakugou_shoes");
        standard(generated, "peitoraldeouro");
        standard(generated, "candy_yellow_turtle_helmet");
        standard(generated, "candy_pink_turtle_helmet");
        standard(generated, "tiara_de_gato");
        standard(generated, "dog_tiara");
        standard(generated, "yellow_karate_band");
        standard(generated, "golden_halo");
        standard(generated, "red_yellow_glasses");

        dualWieldedSword("mid_term_greatsword");
        standard(handheld, "spoon");
        standard(handheld, "moonering_usb_stick");
        standard(handheld, "moonering_backstabber");
        vanillaMilkedSword(handheld, "wooden_sword");
        vanillaMilkedSword(handheld, "stone_sword");
        vanillaMilkedSword(handheld, "iron_sword");
        vanillaMilkedSword(handheld, "diamond_sword");
        vanillaMilkedSword(handheld, "netherite_sword");
        vanillaMilkedSword(handheld, "golden_sword");
        swordWithMilked(handheld, "persona_blade", false);
        swordWithMilked(handheld, "empada_de_ouro", false);
        swordWithMilked(handheld, "espada_de_manteiga", false);
        swordWithMilked(handheld, "devil_sparey", true);
        swordWithMilked(handheld, "mid_term_sparey", true);
        swordWithMilked(handheld, "obsidian_infused_mid_term_sparey", true);
        toolSet(handheld, "devil", true);
        toolSet(handheld, "angelic", true);
        toolSet(handheld, "mid_term", true);
        toolSet(handheld, "obsidian_infused_mid_term", true);
        toolSet(handheld, "milkllary", true);
        toolSet(handheld, "olive", true);
        toolSet(handheld, "crystalline_birch", true);
        toolSet(handheld, "goldenwood", true);
        toolSet(handheld, "guava", true);
        toolSet(handheld, "jabuticaba", true);
        toolSet(handheld, "cork_oak", true);
        toolSet(handheld, "aljanwood", true);
        toolSet(handheld, "aljancap", true);
        toolSet(handheld, "insomnian", true);
        toolSet(handheld, "avondalic_willow", true);
        toolSet(handheld, "aljanstone", true);
        toolSet(handheld, "sleepingstone", true);
        toolSet(handheld, "aljameed", true, "_blade", "_pick", "_shovel", "_axe", "_hoe");
        toolSet(handheld, "aljansteel", true, "_blade", "_pick", "_shovel", "_axe", "_hoe");
        toolSet(handheld, "moonering", true);
        toolSet(handheld, "jantiquified_moonering", true);
        toolSet(handheld, "", true, "sparey", "stacks", "spavel", "spaxe", "stoe");
        standard(handheld, "wooden_knife");
        standard(handheld, "stone_knife");
        standard(handheld, "iron_knife");
        standard(handheld, "golden_knife");
        standard(handheld, "diamond_knife");
        standard(handheld, "netherite_knife");
        standard(handheld, "devil_knife");
        standard(handheld, "angelic_knife");
        standard(handheld, "mid_term_knife");
        standard(handheld, "obsidian_infused_mid_term_knife");
        standard(handheld, "milkllary_knife");
        standard(handheld, "olive_knife");
        standard(handheld, "crystalline_birch_knife");
        standard(handheld, "goldenwood_knife");
        standard(handheld, "guava_knife");
        standard(handheld, "jabuticaba_knife");
        standard(handheld, "cork_oak_knife");
        standard(handheld, "aljanwood_knife");
        standard(handheld, "aljancap_knife");
        standard(handheld, "insomnian_knife");
        standard(handheld, "avondalic_willow_knife");
        standard(handheld, "aljanstone_knife");
        standard(handheld, "sleepingstone_knife");
        standard(handheld, "aljameed_knife");
        standard(handheld, "aljansteel_knife");
        standard(handheld, "moonering_knife");
        standard(handheld, "jantiquified_moonering_knife");
        standard(handheld, "tabu_sword");
        standard(handheld, "bread_sword");
        dualWieldedSword("carewni");
        standard(handheld, "mech_mech");
        standard(handheld, "lapis_rainbow");
        standard(handheld, "karate_training_stick");
        queenLucySummonerStaff("queen_sophie_summoner_staff");
        standard(generated, "talco_de_agua");
        standard(generated, "aljamic_flint_and_aljansteel");
        bow("devil_bow");
        crossbow("devil_crossbow");
        bow("angelic_bow");
        crossbow("angelic_crossbow");
        bow("mid_term_bow");
        janticRailgun("jantic_railgun");
        standard(generated, "chocoglue");
        standard(handheld, "pink_gum_frying_pan");
        standard(generated, "insomnia_arrow");
        standard(generated, "superheater");
        standard(generated, "mortar_and_pestle");
        standard(generated, "crystalline_birch_mortar_and_pestle");
        standard(generated, "goldenwood_mortar_and_pestle");
        standard(generated, "guava_mortar_and_pestle");
        standard(generated, "jabuticaba_mortar_and_pestle");
        standard(generated, "cork_oak_mortar_and_pestle");
        standard(generated, "aljanwood_mortar_and_pestle");
        standard(generated, "aljancap_mortar_and_pestle");
        standard(generated, "insomnian_mortar_and_pestle");
        standard(generated, "avondalic_willow_mortar_and_pestle");
        standard(generated, "devil_shears");
        standard(generated, "angelic_shears");
        standard(generated, "mid_term_shears");
        standard(generated, "obsidian_infused_mid_term_shears");
        standard(generated, "christian_mid_term_shears");
        standard(generated, "milkllary_shears");
        standard(generated, "aljameed_shears");
        standard(generated, "aljansteel_shears");
        standard(generated, "moonering_shears");
        standard(generated, "jantiquified_moonering_shears");
        shield("devil_shield", modLoc("entity/shield/devil"), modLoc("block/devil_block"));
        shield("angelic_shield", modLoc("entity/shield/angelic"), modLoc("block/angelic_block"));
        shield("mid_term_shield", modLoc("entity/shield/mid_term"), modLoc("block/mid_term_block_side"));
        shield("aljameed_shield", modLoc("entity/shield/aljameed"), modLoc("block/aljameed_block"));
        shield("moonering_shield", modLoc("entity/shield/moonering"), modLoc("block/moonering_block"));


        // TODO: Back Math Foods
        // Fruits
        standard(generated, "guarana");
        standard(generated, "mango");
        standard(generated, "mangaed_mango");
        standard(generated, "grapes");
        standard(generated, "lemon");
        standard(generated, "pineapple");
        standard(generated, "orange");
        standard(generated, "banana");
        standard(generated, "guava");
        standard(generated, "jabuticaba");
        standard(generated, "green_apple");
        standard(generated, "aljamic_berry");
        standard(generated, "aljame");
        standard(generated, "jantiquified_aljame");
        getBuilder("holy_jantiquified_aljame").parent(generated).texture("layer0", "item/jantiquified_aljame");

        // Cut Fruits
        standard(generated, "cut_guarana");
        standard(generated, "cut_mango");
        standard(generated, "cut_grapes");
        standard(generated, "cut_lemon");
        standard(generated, "cut_pineapple");
        standard(generated, "cut_orange");
        standard(generated, "cut_banana");
        standard(generated, "cut_guava");
        standard(generated, "cut_jabuticaba");
        standard(generated, "cut_green_apple");
        standard(generated, "cut_aljamic_berry");
        standard(generated, "cut_aljame");
        standard(generated, "cut_jantiquified_aljame");
        getBuilder("cut_holy_jantiquified_aljame").parent(generated).texture("layer0", "item/cut_jantiquified_aljame");
        standard(generated, "cut_apple");
        standard(generated, "cut_golden_apple");
        getBuilder("cut_enchanted_golden_apple").parent(generated).texture("layer0", "item/cut_golden_apple");
        standard(generated, "pumpkin_slice");
        standard(generated, "cut_sweet_berries");
        standard(generated, "cut_glow_berries");

        // Juices
        standard(generated, "guarana_juice");
        standard(generated, "mango_juice");
        standard(generated, "manga_juice");
        standard(generated, "grape_juice");
        standard(generated, "lemon_juice");
        standard(generated, "pineapple_juice");
        standard(generated, "orange_juice");
        standard(generated, "banana_juice");
        standard(generated, "guava_juice");
        standard(generated, "jabuticabada");
        standard(generated, "green_apple_juice");
        standard(generated, "aljamic_berry_juice");
        standard(generated, "aljamic_aljamic_berry_juice");
        standard(generated, "aljame_juice");
        standard(generated, "aljamic_aljame_juice");
        standard(generated, "apple_juice");
        standard(generated, "golden_apple_juice");
        getBuilder("enchanted_golden_apple_juice").parent(generated).texture("layer0", "item/golden_apple_juice");
        standard(generated, "melon_juice");
        standard(generated, "pumpkin_juice");
        standard(generated, "sweet_berry_juice");
        standard(generated, "glow_berry_juice");

        // Popsicles
        standard(generated, "guarana_popsicle");
        standard(generated, "mango_popsicle");
        standard(generated, "manga_popsicle");
        standard(generated, "grape_popsicle");
        standard(generated, "lemon_popsicle");
        standard(generated, "pineapple_popsicle");
        standard(generated, "orange_popsicle");
        standard(generated, "banana_popsicle");
        standard(generated, "guava_popsicle");
        standard(generated, "jabuticaba_popsicle");
        standard(generated, "green_apple_popsicle");
        standard(generated, "aljamic_berry_popsicle");
        standard(generated, "aljame_popsicle");
        standard(generated, "water_popsicle");
        standard(generated, "hillary_popsicle");
        standard(generated, "milkllary_popsicle");
        standard(generated, "apple_popsicle");
        standard(generated, "golden_apple_popsicle");
        getBuilder("enchanted_golden_apple_popsicle").parent(generated).texture("layer0", "item/golden_apple_popsicle");
        standard(generated, "melon_popsicle");
        standard(generated, "pumpkin_popsicle");
        standard(generated, "sweet_berry_popsicle");
        standard(generated, "glow_berry_popsicle");

        // Jams
        // Pots
        standard(generated, "spice_pot");
        standard(generated, "oregano_pot");
        standard(generated, "jam_pot");
        standard(generated, "milk_pot");
        standard(generated, "lava_pot");
        standard(generated, "powder_snow_pot");
        standard(generated, "cookie_pot");
        standard(generated, "beetroot_soup_pot");
        standard(generated, "mushroom_stew_pot");
        standard(generated, "rabbit_stew_pot");
        standard(generated, "fungi_stew_pot");
        standard(generated, "end_fungi_stew_pot");
        standard(generated, "aljan_fungi_stew_pot");
        getBuilder("effect_jam").parent(generated).texture("layer0", "item/effect_jam_overlay").texture("layer1", "item/effect_jam_pot");

        standard(generated, "guarana_jam");
        standard(generated, "mango_jam");
        standard(generated, "manga_jam");
        standard(generated, "grape_jam");
        standard(generated, "lemon_jam");
        standard(generated, "pineapple_jam");
        standard(generated, "orange_jam");
        standard(generated, "banana_jam");
        standard(generated, "guava_jam");
        standard(generated, "jabuticaba_jam");
        standard(generated, "green_apple_jam");
        standard(generated, "aljamic_berry_jam");
        standard(generated, "aljame_jam");
        standard(generated, "water_jam");
        standard(generated, "hilary_jam");
        standard(generated, "milklary_jam");
        standard(generated, "apple_jam");
        standard(generated, "golden_apple_jam");
        getBuilder("enchanted_golden_apple_jam").parent(generated).texture("layer0", "item/golden_apple_jam");
        standard(generated, "melon_jam");
        standard(generated, "pumpkin_jam");
        standard(generated, "sweet_berry_jam");
        standard(generated, "glow_berry_jam");

        // Jam Bread
        standard(generated, "fried_egg_bread");
        standard(generated, "turtle_fried_egg_bread");
        standard(generated, "ender_dragon_fried_egg_bread");
        standard(generated, "bread_with_pao");
        standard(generated, "chocolate");
        standard(generated, "honeyed_bread");
        standard(generated, "nutella_chocolate");
        standard(generated, "amaracamel_batter_bread");
        standard(generated, "amaracamel_batter_toast");
        standard(generated, "cheese_bread");
        standard(generated, "cheese_bread_bag");

        standard(generated, "guarana_jam_bread");
        standard(generated, "mango_jam_bread");
        standard(generated, "manga_jam_bread");
        standard(generated, "grape_jam_bread");
        standard(generated, "lemon_jam_bread");
        standard(generated, "pineapple_jam_bread");
        standard(generated, "orange_jam_bread");
        standard(generated, "banana_jam_bread");
        standard(generated, "guava_jam_bread");
        standard(generated, "jabuticaba_jam_bread");
        standard(generated, "green_apple_jam_bread");
        standard(generated, "aljamic_berry_jam_bread");
        standard(generated, "aljame_jam_bread");
        standard(generated, "water_droplet_bread");
        getBuilder("ze_droplet_bread").parent(generated).texture("layer0", "item/water_droplet_bread");
        standard(generated, "hilary_jam_bread");
        standard(generated, "milklary_jam_bread");
        standard(generated, "apple_jam_bread");
        standard(generated, "golden_apple_jam_bread");
        getBuilder("enchanted_golden_apple_jam_bread").parent(generated).texture("layer0", "item/golden_apple_jam_bread");
        standard(generated, "melon_jam_bread");
        standard(generated, "pumpkin_jam_bread");
        standard(generated, "sweet_berry_jam_bread");
        standard(generated, "glow_berry_jam_bread");

        // Miscellaneous
        standard(generated, "aljamic_onion");
        standard(generated, "aljan_fungi_stew");
        standard(generated, "monster_energy_drink");
        standard(generated, "energetic_monster");
        standard(generated, "wine");
        standard(generated, "jabuticaba_wine");
        standard(generated, "aljame_tea_box");
        standard(generated, "aljame_tea");
        standard(generated, "aljame_teacup");
        standard(generated, "patience_tea");
        standard(generated, "peace_tea");
        standard(generated, "disgust_tea");
        standard(generated, "mood_tea");
        standard(generated, "amaracamel_juice");
        standard(generated, "coffee_mug");
        standard(generated, "choccy_milk_bucket");
        standard(generated, "choccy_milk_bottle");
        standard(generated, "hillary_bottle");
        standard(generated, "milkllary_bottle");
        standard(generated, "toddy");
        standard(generated, "mortadella");
        standard(generated, "aljamic_beef");
        standard(generated, "cooked_aljamic_beef");
        standard(generated, "aljamic_porkchop");
        standard(generated, "cooked_aljamic_porkchop");
        standard(generated, "aljamic_mutton");
        standard(generated, "cooked_aljamic_mutton");
        standard(generated, "aljamic_chicken");
        standard(generated, "cooked_aljamic_chicken");
        standard(generated, "rotten_aljamic_flesh");
        standard(generated, "aljamic_eye");
        standard(generated, "pasta");
        standard(generated, "fried_sophie_fried_egg_meal");
        standard(generated, "cooked_lucia_fried_egg_meal");
        standard(generated, "toasted_fabricio_fried_egg_meal");
        standard(generated, "hot_sophie_cold_fabricio_meal");
        standard(generated, "lagusta");
        standard(generated, "cooked_egg");
        standard(generated, "oregano_fried_egg");
        standard(generated, "omelet");
        standard(generated, "turtle_fried_egg");
        standard(generated, "oregano_turtle_fried_egg");
        standard(generated, "turtle_omelet");
        standard(generated, "ender_dragon_fried_egg");
        standard(generated, "oregano_ender_dragon_fried_egg");
        standard(generated, "ender_omelet");
        standard(generated, "hillary_cake");
        standard(generated, "milkllary_cake");
        block("chocolate_naked_cake");
        standard(generated, "pine_jelly");
        standard(generated, "patty");
        notebook("notebook", "notebook_bottom", "notebook_screen", "notebook_keyboard");
        notebook("fried_notebook", "fried_notebook_bottom", "fried_notebook_screen", "fried_notebook_keyboard");
        stuffedNotebook("stuffed_cookie_notebook", "stuffed_cookie_notebook_bottom", "stuffed_cookie_notebook_screen", "stuffed_cookie_notebook_keyboard", "stuffed_cookie_notebook_inner");
        stuffedNotebook("fried_stuffed_cookie_notebook", "fried_stuffed_cookie_notebook_bottom", "fried_stuffed_cookie_notebook_screen", "fried_stuffed_cookie_notebook_keyboard", "fried_stuffed_cookie_notebook_inner");

        // Bags
        standard(generated, "amaracamel_batter_bag");
        standard(generated, "empty_amaracamel_batter_bag");
        standard(generated, "amaracamel_batter");
        standard(generated, "cooked_egg_bag");
        standard(generated, "empty_cooked_egg_bag");
        standard(generated, "turtle_fried_egg_bag");
        standard(generated, "empty_turtle_fried_egg_bag");
        standard(generated, "ender_dragon_fried_egg_bag");
        standard(generated, "empty_ender_dragon_fried_egg_bag");
        standard(generated, "lagusta_bag");
        standard(generated, "empty_lagusta_bag");
        standard(generated, "boot_pack");
        standard(generated, "empty_boot_pack");
        standard(generated, "queen_sophie_battle_pack");
        standard(generated, "food_bag");
        standard(generated, "food_bag_alt");

        standard(generated, "sophie");
        standard(generated, "raw_minced_sophie");
        standard(generated, "fried_sophie");
        standard(generated, "minced_sophie");
        standard(generated, "hot_sophie");
        standard(generated, "lucia");
        standard(generated, "raw_minced_lucia");
        standard(generated, "cooked_lucia");
        standard(generated, "minced_lucia");
        standard(generated, "fabricio");
        standard(generated, "raw_minced_fabricio");
        standard(generated, "toasted_fabricio");
        standard(generated, "minced_fabricio");
        standard(generated, "cold_fabricio");
        standard(generated, "raw_sophicio_mixture");
        standard(generated, "sophicio_mixture");
    }
}
