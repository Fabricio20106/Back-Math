    /*public static final ConfiguredFeature<?, ?> ALJANSTONE_BOULDER = register("aljanstone_boulder", BMFeatureRegister.ALJANSTONE_BOULDER.get().withConfiguration(new BlockStateProvidingFeatureConfig(
            new WeightedBlockStateProvider().addWeightedBlockstate(BMBlocks.ALJANSTONE.get().getDefaultState(), 7).addWeightedBlockstate(BMBlocks.COBBLED_ALJANSTONE.get()
                    .getDefaultState(), 4))).withPlacement(Features.Placements.HEIGHTMAP_PLACEMENT).func_242732_c(3));

    public static final ConfiguredFeature<?, ?> SLEEPINGSTONE_BOULDER = register("sleepingstone_boulder", Feature.FOREST_ROCK.withConfiguration(new BlockStateFeatureConfig(
            BMBlocks.SLEEPINGSTONE.get().getDefaultState()))).withPlacement(Features.Placements.HEIGHTMAP_PLACEMENT).func_242732_c(3);*/

// Crystallizer Recipe code; will probably be turned into RecipeType later.
    private ActionResultType makeCrystallizerRecipe(@Nonnull ItemStack mainHandStack, ItemStack offHandStack, ItemStack result, SoundEvent successSound, World world, BlockPos pos, @Nonnull PlayerEntity player) {
        ItemStack mainHand = player.getHeldItem(Hand.MAIN_HAND);
        ItemStack offHand = player.getHeldItem(Hand.OFF_HAND);

        if (!mainHandStack.getItem().isIn(BMTags.Items.CANNOT_USE_AT_CRYSTALLIZER)) {
            if (mainHand == mainHandStack && offHandStack == null) {
                world.playSound(null, pos, successSound, SoundCategory.BLOCKS, 1, 1);
                player.addItemStackToInventory(result);
                mainHand.shrink(1);
                player.addStat(BMStats.CRAFT_IN_CRYSTALLIZER);
                player.addStat(Stats.ITEM_USED.get(mainHand.getItem()));
                return ActionResultType.SUCCESS;
            } else if (mainHand == mainHandStack && offHand == offHandStack) {
                world.playSound(null, pos, successSound, SoundCategory.BLOCKS, 1, 1);
                player.addItemStackToInventory(result);
                mainHand.shrink(1);
                offHand.shrink(1);
                player.addStat(BMStats.CRAFT_IN_CRYSTALLIZER);
                player.addStat(Stats.ITEM_USED.get(mainHand.getItem()));
                player.addStat(Stats.ITEM_USED.get(offHand.getItem()));
                return ActionResultType.SUCCESS;
            } else {
                world.playSound(null, pos, BMSounds.BLOCK_CRYSTALLIZER_FAIL_CRAFT, SoundCategory.BLOCKS, 1, 1);
                return ActionResultType.FAIL;
            }
        }
        return ActionResultType.FAIL;
    }

// From JanticOreBlock.java
    /*@Override
    public void onBlockHarvested(World world, BlockPos pos, BlockState state, PlayerEntity player) {
        if (!world.isRemote && !player.isCreative()) {
            Janticle janticle = new Janticle(world);
            world.addEntity(janticle);
        }
        super.onBlockHarvested(world, pos, state, player);
    }*/